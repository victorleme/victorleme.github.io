{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "..\\..\\Notifications.svelte",
    "..\\..\\AutoComplete.svelte",
    "..\\..\\Field.svelte",
    "..\\..\\File.svelte",
    "..\\..\\Input.svelte",
    "..\\..\\Journal.svelte",
    "..\\..\\JournalWithoutAmount.svelte",
    "..\\..\\Persona.svelte",
    "..\\..\\Select.svelte",
    "..\\..\\Tags.svelte",
    "..\\..\\Textarea.svelte",
    "..\\..\\tree-node.svelte",
    "..\\..\\Balanco.svelte",
    "..\\..\\BalancoCellAmount.svelte",
    "..\\..\\BalancoChooser.svelte",
    "..\\..\\BalancoGroup.svelte",
    "..\\..\\BalancoOptions.svelte",
    "..\\..\\FormManager.svelte",
    "..\\..\\MainLayout.svelte",
    "..\\..\\NaturalList.svelte",
    "..\\..\\NaturalActions.svelte",
    "..\\..\\NaturalForm.svelte",
    "..\\..\\NaturalOptions.svelte",
    "..\\..\\NaturalTable.svelte",
    "..\\..\\NaturalTableWithAll.svelte",
    "..\\..\\PersonaForm.svelte",
    "..\\..\\TagForm.svelte",
    "..\\..\\TagsChooser.svelte"
  ],
  "sourcesContent": [
    "<ul class=\"toasts\">\n\t{#each toasts as toast (toast.id)}\n\t\t<li class=\"toast\" style=\"background: {toast.background};\" out:animateOut>\n\t\t\t<div class=\"content\">\n\t\t\t\t{toast.msg}\n\t\t\t</div>\n\t\t\t<div \n        class=\"progress\" \n        style=\"animation-duration: {toast.timeout}ms;\"\n        on:animationend={() => removeToast(toast.id) }>\n\t\t\t</div>\n\t\t</li>\t\n\t{/each}\n</ul>\n\n<style>\n\t:global(.toasts) {\n\t\tlist-style: none;\n\t\tposition: fixed;\n\t\ttop: 0;\n\t\tright: 0;\n\t\tpadding: 0;\n\t\tmargin: 0;\n\t\tz-index: 9999;\n\t}\n\t\n\t:global(.toasts) > .toast {\n\t\tposition: relative;\n\t\tmargin: 10px;\n\t\tmin-width: 40vw;\n\t\tposition: relative;\n\t\tanimation: animate-in 350ms forwards;\n\t\tcolor: #fff;\n\t}\n\t\n\t:global(.toasts) > .toast > .content {\n\t\tpadding: 10px;\n\t\tdisplay: block;\n\t\tfont-weight: 500;\n\t}\n\t\n\t:global(.toasts) > .toast > .progress {\n\t\tposition: absolute;\n\t\tbottom: 0;\n\t\tbackground-color: rgb(0, 0, 0, 0.3);\n\t\theight: 6px;\n    width: 100%;\n\t  animation-name: shrink;\n\t  animation-timing-function: linear;\n\t  animation-fill-mode: forwards;\n\t}\n\t\n\t:global(.toasts) > .toast:before,\n\t:global(.toasts) > .toast:after {\n\t\t\tcontent:\"\";\n\t\t\tposition:absolute;\n\t\t\tz-index:-1;\n\t\t\ttop:50%;\n\t\t\tbottom:0;\n\t\t\tleft:10px;\n\t\t\tright:10px;\n\t\t\tborder-radius:100px / 10px;\n\t}\n\t\n\t:global(.toasts) > .toast:after {\n\t\t\tright:10px;\n\t\t\tleft:auto;\n\t\t\ttransform:skew(8deg) rotate(3deg);\n\t}\n\t\n\t@keyframes animate-in { \n\t\t0% { \n\t\t\twidth: 0; \n\t\t\topacity: 0; \n\t\t\ttransform: scale(1.15) translateY(20px);\n\t\t}\n\t\t100% { \n\t\t\twidth: 40vw;\n\t\t\topacity: 1; \n\t\t\ttransform: scale(1) translateY(0);\n\t\t}\n\t}\n\t\n\t@keyframes shrink { \n\t\t0% { \n\t\t\twidth: 40vw; \n\t\t}\n\t\t100% { \n\t\t\twidth: 0; \n\t\t}\n\t}\n\t\n</style>\n\n<script>\n  import { notification } from './store.js'\n  import { onMount, onDestroy } from 'svelte'\n\n\texport let themes = {\n\t\tdanger: '#bb2124',\n\t\tsuccess: '#22bb33',\n\t\twarning: '#f0ad4e',\n\t\tinfo: '#5bc0de',\n\t\tdefault: '#aaaaaa'\n  }\n\n  export let timeout = 3000\n\n\tlet count = 0\n\tlet toasts = [ ]\n  let unsubscribe\n\n\tfunction animateOut(node, { delay = 0, duration = 300 }) {\n\t\tfunction vhTOpx (value) {\n\t\t\tvar w = window,\n\t\t\t\td = document,\n\t\t\t\te = d.documentElement,\n\t\t\t\tg = d.getElementsByTagName('body')[0],\n\t\t\t\tx = w.innerWidth || e.clientWidth || g.clientWidth,\n\t\t\t\ty = w.innerHeight|| e.clientHeight|| g.clientHeight;\n\n\t\t\treturn (y*value)/100;\n\t\t}\n\t\t\n\t\treturn {\n\t\t\tdelay,\n\t\t\tduration,\n\t\t\tcss: t => `opacity: ${(t-.5) * 1}; transform-origin: top right; transform: scaleX(${(t-.5)*1});`\n\t\t}\n\t}\n\n\tfunction createToast (msg, theme, to) {\n\t\tconst background = themes[theme] || themes['default']\n\t\ttoasts = [{\n\t\t\tid: count,\n\t\t\tmsg, \n\t\t\tbackground, \n\t\t\ttimeout: to || timeout,\n\t\t\twidth: '100%'\n\t\t}, ...toasts];\n\t\tcount = count + 1\n  }\n  \n  unsubscribe = notification.subscribe(value => {\n    if (!value) { return }\n    createToast(value.message, value.type, value.timeout)\n    notification.set()\n  })\n  \n  onDestroy(unsubscribe)\n\t\n\tfunction removeToast (id) { \n\t\ttoasts = toasts.filter(t => t.id != id)\n\t}\n</script>\n",
    "<script>\n  import { createEventDispatcher, onMount } from \"svelte\";\n  import clsx from \"clsx\";\n  // Declar variables.\n  export let id = false;\n  export let name = \"\";\n  export let placeholder = \"Tap here...\";\n  export let multiple = false;\n  export let loadItemes = [];\n  let items = loadItemes;\n  let itemsFiltered = [];\n  let itemsSelected = [];\n  let hideListItems = true;\n  let useFilter = false;\n  let value = null;\n\n  const dispatch = createEventDispatcher();\n\n  // Select item.\n  const onSelectItem = item => {\n    hideListItems = true;\n    const oldSelected = itemsSelected.filter(s => s.id === item.id);\n    if (oldSelected.length === 0) {\n      itemsSelected = [...itemsSelected, item];\n      items = items.filter(i => i.id != item.id);\n    }\n    if (useFilter) {\n      itemsFiltered = items;\n    }\n\n    // Affect values.\n    dispatch(\"changeValue\", {\n      name: name,\n      value: itemsSelected\n    });\n\n    value = \"\";\n  };\n\n  // Delete tag\n  const deleteTag = item => {\n    itemsSelected = itemsSelected.filter(i => i.id != item.id);\n    items = [...items, item];\n    if (useFilter) {\n      itemsFiltered = items;\n    }\n\n    // Affect values.\n    dispatch(\"changeValue\", {\n      name: name,\n      value: itemsSelected\n    });\n  };\n\n  // Clear all items selected.\n  function clearAll() {\n    itemsSelected = [];\n    items = loadItemes;\n    if (useFilter) {\n      itemsFiltered = items;\n    }\n\n    // Affect values.\n    dispatch(\"changeValue\", {\n      name: name,\n      value: itemsSelected\n    });\n  }\n\n  // Filter item.\n  const onFilter = e => {\n    const keyword = e.target.value;\n    if (keyword.length > 2) {\n      hideListItems = false;\n      const filtered = items.filter(entry => {\n        return Object.values(entry).some(\n          val => typeof val === \"string\" && val.includes(keyword)\n        );\n      });\n      if (filtered.length > 0) {\n        itemsFiltered = filtered;\n      }\n      useFilter = true;\n    }\n  };\n</script>\n\n<style>\n  .select-container {\n    border: solid 1px #dddddd;\n    border-radius: 4px;\n    height: auto;\n    position: relative;\n    display: flex;\n    flex-wrap: wrap;\n  }\n  .select-container input {\n    border: none;\n    padding: 0 15px;\n    height: 40px;\n    width: 100%;\n    /* position: absolute; */\n    box-sizing: border-box;\n  }\n  .items-container {\n    box-shadow: 0 2px 3px 0 rgba(44, 62, 80, 0.24);\n    background: #ffffff;\n    border-radius: 0 0 5px 5px;\n    overflow-y: auto;\n    position: absolute;\n    top: 0;\n    z-index: 2;\n    width: 100%;\n  }\n  .items-container .item,\n  .item-selected {\n    height: 40px;\n    line-height: 40px;\n    padding: 0 20px;\n    overflow: hidden;\n  }\n  .items-container .item:first-child,\n  .items-container .item:hover {\n    background-color: #fbd5c8;\n    cursor: pointer;\n  }\n  .item-selected,\n  .clear-all {\n    position: absolute;\n    z-index: 2;\n  }\n  .item-selected {\n    display: flex;\n    flex-wrap: wrap;\n  }\n  .clear-all {\n    right: 20px;\n    width: 20px;\n    height: 40px;\n    cursor: pointer;\n  }\n  .clear {\n    cursor: pointer;\n  }\n  .tag {\n    background-color: #ddd;\n    border-radius: 15px;\n    height: 25px;\n    line-height: 25px;\n    margin: 8px 5px;\n    padding: 0 30px 0 10px;\n    position: relative;\n    display: flex;\n    flex-wrap: wrap;\n  }\n  .tag .clear {\n    box-shadow: 0 2px 3px 0 rgba(44, 62, 80, 0.24);\n    border-radius: 50%;\n    width: 15px;\n    height: 15px;\n    padding: 2px;\n    position: absolute;\n    right: 5px;\n    top: 3px;\n    background-color: #ff3e00;\n  }\n  .tag .clear:hover {\n    background-color: #fbd5c8;\n  }\n  .tag .clear svg {\n    fill: white;\n    vertical-align: top;\n  }\n  input:focus {\n    outline: none;\n  }\n  /* .spinner-wrapper {\n    width: 30px;\n    position: absolute;\n    right: 0;\n    top: 5px;\n    margin: 0 5px;\n  }\n  .spinner {\n    animation: rotate 1.4s linear infinite;\n    -webkit-animation: rotate 1.4s linear infinite;\n    -moz-animation: rotate 1.4s linear infinite;\n    width: 30px;\n    height: 30px;\n    position: relative;\n  }\n  .spinner-dot {\n    width: 274px;\n    height: 274px;\n    position: relative;\n    top: 0;\n  } */\n  /* @keyframes rotate {\n    to {\n      transform: rotate(360deg);\n    }\n  }\n  @-webkit-keyframes rotate {\n    to {\n      -webkit-transform: rotate(360deg);\n    }\n  }\n  @-moz-keyframes rotate {\n    to {\n      transform: rotate(360deg);\n    }\n  }\n  .path {\n    stroke-dasharray: 170;\n    stroke-dashoffset: 20;\n  } */\n</style>\n\n<div class=\"select-container\">\n  <!-- Selected item and clear button -->\n  {#if itemsSelected.length > 0}\n    {#each itemsSelected as itemSelected}\n      <div class=\"item-selected {multiple ? 'tag' : ''}\">\n        <span>{itemSelected.title}</span>\n        {#if multiple}\n          <div class=\"clear\" on:click={() => deleteTag(itemSelected)}>\n            <svg\n              width=\"100%\"\n              height=\"100%\"\n              viewBox=\"-2 -2 50 50\"\n              focusable=\"false\">\n              <path\n                d=\"M34.923,37.251L24,26.328L13.077,37.251L9.436,33.61l10.923-10.923L9.436,11.765l3.641-3.641L24,19.047L34.923,8.124\n                l3.641,3.641L27.641,22.688L38.564,33.61L34.923,37.251z\" />\n            </svg>\n          </div>\n        {/if}\n      </div>\n    {/each}\n    <div class=\"clear-all\" on:click={clearAll}>\n      <svg\n        width=\"100%\"\n        height=\"100%\"\n        viewBox=\"-2 -2 50 50\"\n        focusable=\"false\"\n        role=\"presentation\"\n        class=\"svelte-e3bo9s\">\n        <path\n          fill=\"currentColor\"\n          d=\"M34.923,37.251L24,26.328L13.077,37.251L9.436,33.61l10.923-10.923L9.436,11.765l3.641-3.641L24,19.047L34.923,8.124\n          l3.641,3.641L27.641,22.688L38.564,33.61L34.923,37.251z\" />\n      </svg>\n    </div>\n  {/if}\n\n  <!-- <div class=\"spinner-wrapper\">\n    <svg\n      class=\"spinner\"\n      width=\"30px\"\n      height=\"30px\"\n      viewBox=\"0 0 66 66\"\n      xmlns=\"http://www.w3.org/2000/svg\">\n      <circle\n        class=\"path\"\n        fill=\"transparent\"\n        stroke-width=\"2\"\n        cx=\"33\"\n        cy=\"33\"\n        r=\"30\"\n        stroke=\"url(#gradient)\">\n        <linearGradient id=\"gradient\">\n          <stop offset=\"50%\" stop-color=\"#42d179\" stop-opacity=\"1\" />\n          <stop offset=\"65%\" stop-color=\"#42d179\" stop-opacity=\".5\" />\n          <stop offset=\"100%\" stop-color=\"#42d179\" stop-opacity=\"0\" />\n        </linearGradient>\n      </circle>\n      <svg\n        class=\"spinner-dot dot\"\n        width=\"5px\"\n        height=\"5px\"\n        viewBox=\"0 0 66 66\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        x=\"37\"\n        y=\"1.5\">\n        <circle class=\"path\" fill=\"#42d179\" cx=\"33\" cy=\"33\" r=\"30\" />\n      </svg>\n    </svg>\n  </div> -->\n\n  <!-- Input to autocomplete -->\n  <input\n    {id}\n    type=\"text\"\n    spellcheck=\"false\"\n    autocorrect=\"off\"\n    autocomplete=\"off\"\n    {placeholder}\n    on:keyup={onFilter}\n    bind:value />\n\n  <!-- List items -->\n  {#if !hideListItems}\n    <div style=\"position: relative; width: 100%;\">\n      <div class=\"items-container\">\n        {#if useFilter}\n          {#each itemsFiltered as item}\n            <div\n              class=\"item\"\n              on:click={() => {\n                onSelectItem(item);\n              }}>\n              <span>{item.title}</span>\n            </div>\n          {/each}\n        {:else}\n          {#each items as item}\n            <div\n              class=\"item\"\n              on:click={() => {\n                onSelectItem(item);\n              }}>\n              <span>{item.title}</span>\n            </div>\n          {/each}\n        {/if}\n      </div>\n    </div>\n  {/if}\n</div>\n",
    "<script>\n  import { onMount, onDestroy } from \"svelte\";\n  import { get } from \"svelte/store\";\n  import clsx from \"clsx\";\n  import { validator } from \"../Validation/\";\n  import { valuesForm } from \"./stores.js\";\n  // Import components.\n  import Tag from \"./Tag.svelte\";\n  import Tags from \"./Tags.svelte\";\n  import Input from \"./Input.svelte\";\n  import Textarea from \"./Textarea.svelte\";\n  import Select from \"./Select.svelte\";\n  import AutoComplete from \"./AutoComplete.svelte\";\n  import Radio from \"./Radio.svelte\";\n  import Checkbox from \"./Checkbox.svelte\";\n  import File from \"./File.svelte\";\n  import Message from \"./Message.svelte\";\n  import Journal from \"./Journal.svelte\";\n  import Persona from \"./Persona.svelte\";\n  import JournalWithoutAmount from \"./JournalWithoutAmount.svelte\";\n  // Declar variables;\n  export let fields = [];\n  export let accounts = [];\n  export let listOfPersonas = [];\n  export let groups = [];\n  export let uuid = \"\";\n  let values = [];\n  let isValidForm = true;\n  // Set values form and status validation.\n  const setValuesForm = (isValidForm, values) => {\n    if (!uuid) {\n      valuesForm.set({\n        isValidForm,\n        values: { ...values }\n      });\n    } else {\n      valuesForm.set({\n        ...$valuesForm,\n        [uuid]: {\n          isValidForm,\n          values: { ...values }\n        }\n      });\n    }\n  };\n  // Change values.\n  const changeValueHander = event => {\n    values[`${event.detail.name}`] = event.detail.value;\n    fields.filter(field => {\n      if (field.name === event.detail.name) {\n        field.value = event.detail.value;\n      }\n    });\n    setValuesForm(isValidForm, values);\n  };\n  // Validation Form.\n  let fieldsToValidate = {};\n  const form = validator(() => {\n    if (fields.length > 0) {\n      fields.map(field => {\n        let { validation } = field;\n        const value = field.value ? field.value : null;\n        const fieldValidate = {\n          [field.name]: {\n            value: values[field.name] ? values[field.name] : value,\n            validators: validation,\n            file: field.type === \"file\" ? field.file : null\n          }\n        };\n        fieldsToValidate = { ...fieldsToValidate, ...fieldValidate };\n      });\n    }\n    return fieldsToValidate;\n  });\n  form.subscribe(data => {\n    isValidForm = data.valid;\n    setValuesForm(isValidForm, values);\n  });\n  // Lifecycle mount to start.\n  onMount(() => {\n    $valuesForm;\n  });\n  // Lifecycle destroy to unbscribe.\n  // onDestroy([valuesForm]);\n</script>\n\n<style>\n  main {\n    height: 100%;\n  }\n</style>\n\n<main>\n  {#each fields as field (field.name)}\n    <!-- Prefix -->\n    <Tag\n      tag={field.prefix ? (field.prefix.tag ? field.prefix.tag : 'div') : 'div'}\n      classes={field.prefix ? (field.prefix.class ? field.prefix.class : 'form-group') : 'form-group'}>\n      <!-- Label -->\n      {#if field.label && field.type !== 'file'}\n        <label for={field.id}>{field.label}</label>\n      {/if}\n      <!-- Field -->\n      {#if field.type === 'text' || field.type === 'password' || field.type === 'email' || field.type === 'tel' || field.type === 'number' || field.type === 'range' || field.type === 'date' || field.type === 'color' || field.type === 'datetimelocal'}\n        <Input\n          type={field.type}\n          id={field.id}\n          name={field.name}\n          value={field.value}\n          classe={field.class}\n          placeholder={field.placeholder}\n          min={field.min}\n          max={field.max}\n          step={field.step}\n          autocomplete={field.autocomplete}\n          disabled={field.disabled}\n          readonly={field.readonly}\n          on:changeValue={changeValueHander} />\n      {:else if field.type === 'textarea'}\n        <Textarea\n          id={field.id}\n          name={field.name}\n          value={field.value}\n          classe={field.class}\n          rows={field.rows}\n          cols={field.cols}\n          disabled={field.disabled}\n          readonly={field.readonly}\n          on:changeValue={changeValueHander} />\n      {:else if field.type === 'select'}\n        <Select\n          id={field.id}\n          name={field.name}\n          classe={field.class}\n          options={field.options}\n          disabled={field.disabled}\n          multiple={field.multiple}\n          on:changeValue={changeValueHander} />\n      {:else if field.type === 'autocomplete'}\n        <AutoComplete\n          id={field.id}\n          name={field.name}\n          classe={field.class}\n          loadItemes={field.loadItemes}\n          disabled={field.disabled}\n          multiple={field.multiple}\n          on:changeValue={changeValueHander}\n          on:onSelectItem />\n      {:else if field.type === 'radio'}\n        <Radio\n          name={field.name}\n          classe={field.class}\n          items={field.items}\n          aligne={field.aligne}\n          on:changeValue={changeValueHander} />\n      {:else if field.type === 'checkbox'}\n        <Checkbox\n          classe={field.class}\n          items={field.items}\n          aligne={field.aligne}\n          on:changeValue={changeValueHander} />\n      {:else if field.type === 'file'}\n        <File\n          id={field.id}\n          name={field.name}\n          files={field.value ? field.value : []}\n          classe={field.class}\n          disabled={field.disabled}\n          multiple={field.multiple}\n          showPreview={field.showPreview}\n          on:changeValue={changeValueHander} />\n      {:else if field.type === 'journal'}\n        <Journal\n          id={field.id}\n          name={field.name}\n          {accounts}\n          classe={field.class}\n          disabled={field.disabled}\n          journals={field.value}\n          on:changeValue={changeValueHander} />\n      {:else if field.type === 'persona'}\n        <Persona\n          id={field.id}\n          name={field.name}\n          {listOfPersonas}\n          classe={field.class}\n          disabled={field.disabled}\n          personas={field.value}\n          on:changeValue={changeValueHander} />\n      {:else if field.type === 'journalwithoutamount'}\n        <JournalWithoutAmount\n          id={field.id}\n          name={field.name}\n          {accounts}\n          classe={field.class}\n          disabled={field.disabled}\n          journals={field.value}\n          on:changeValue={changeValueHander} />\n      {:else if field.type === 'tags'}\n        <Tags\n          id={field.id}\n          name={field.name}\n          {groups}\n          classe={field.class}\n          disabled={field.disabled}\n          value={field.value}\n          on:changeValue={changeValueHander} />\n      {/if}\n      <!-- Description -->\n      {#if field.description}\n        {#if field.description.text}\n          <Tag tag={field.description.tag} classes={field.description.class}>\n            {field.description.text}\n          </Tag>\n        {/if}\n      {/if}\n      <!-- Error messages -->\n      {#if !isValidForm}\n        {#if $form[field.name].validation.errors.length > 0}\n          {#each $form[field.name].validation.errors as error, index}\n            <Message {error} messages={field.messages} />\n          {/each}\n        {/if}\n      {/if}\n    </Tag>\n  {/each}\n</main>\n",
    "<script>\n  import { createEventDispatcher } from \"svelte\";\n  import clsx from \"clsx\";\n  // Declar variables.\n  export let id = \"\";\n  export let name = \"\";\n  export let classe = \"\";\n  export let disabled = null;\n  export let multiple = false;\n  export let showPreview = false;\n  export let files = [];\n  $: console.log(\"files\", files);\n  const dispatch = createEventDispatcher();\n  // Change value field.\n  function onChangerValue(event) {\n    let newFiles = Array.from(event.target.files);\n    dispatch(\"changeValue\", {\n      name: name,\n      value: [...files, ...newFiles]\n    });\n    files = [...files, ...newFiles];\n  }\n\n  // Delete file.\n  function deleteFile(file) {\n    files = files.filter(i => i.name != file.name);\n    dispatch(\"changeValue\", {\n      name: name,\n      value: files\n    });\n  }\n  const downloadFile = file => {\n    var link = document.createElement(\"a\");\n    link.download = file.name;\n    link.href = file;\n    link.click();\n  };\n</script>\n\n<style>\n  input {\n    width: 0.1px;\n    height: 0.1px;\n    opacity: 0;\n    overflow: hidden;\n    position: absolute;\n    z-index: -1;\n  }\n  .btn--attach {\n    width: 5rem;\n    font-weight: 600;\n    padding: 0.5rem 1rem;\n    cursor: pointer;\n    color: #737273;\n    background-color: #e3e2e3;\n    outline: none;\n    border: none;\n    border-radius: 12px;\n  }\n  .infos {\n    display: flex;\n    font-size: 0.5rem;\n  }\n  main {\n    display: flex;\n    justify-content: space-between;\n  }\n  .list-files {\n    display: grid;\n    grid-template-columns: 1fr 1fr 1fr;\n    grid-template-rows: 1fr 1fr 1fr;\n  }\n  .button {\n    margin-left: 0.3rem;\n  }\n</style>\n\n<main>\n  <label class=\"btn--attach\" for={id}>Anexar...</label>\n  <input\n    type=\"file\"\n    {id}\n    {name}\n    class={clsx(classe)}\n    {disabled}\n    {multiple}\n    on:input={onChangerValue} />\n\n  {#if showPreview}\n    {#if files}\n      <div class=\"list-files\">\n        {#each files as file, i}\n          <div class=\"file\">\n            <div class=\"infos\">\n              <div on:click={() => downloadFile(file)}>{file.name}</div>\n              <div\n                class=\"button\"\n                on:click|preventDefault={() => {\n                  deleteFile(file);\n                }}>\n                ✖\n              </div>\n            </div>\n          </div>\n        {/each}\n      </div>\n    {/if}\n  {/if}\n</main>\n",
    "<script>\n  import { createEventDispatcher, onMount } from \"svelte\";\n  import clsx from \"clsx\";\n  // Declar variables.\n  export let type = \"text\";\n  export let id = \"\";\n  export let name = \"\";\n  export let value = \"\";\n  export let classe = \"\";\n  export let min = null;\n  export let max = null;\n  export let step = null;\n  export let autocomplete = \"off\";\n  export let placeholder = null;\n  export let disabled = null;\n  export let readonly = null;\n  if (name == \"title\") {\n    placeholder = \"Compra de água para o escritório...\";\n  }\n  const dispatch = createEventDispatcher();\n  // Change value field.\n  function onChangerValue(event) {\n    console.log(\"onmount\");\n    dispatch(\"changeValue\", {\n      name: name,\n      value: event.target.value\n    });\n  }\n  // Insert default values.\n  onMount(() => {\n    type = type === \"datetimelocal\" ? \"datetime-local\" : type;\n    value = type === \"range\" ? (value = min) : value;\n    dispatch(\"changeValue\", {\n      name,\n      value\n    });\n  });\n</script>\n\n<style>\n  input {\n    font-size: 0.5rem;\n    height: 2rem;\n    width: 23rem;\n    font-weight: 600;\n    border-radius: 7px;\n  }\n</style>\n\n<input\n  {type}\n  {id}\n  {name}\n  {value}\n  class={clsx(classe)}\n  {placeholder}\n  {disabled}\n  {readonly}\n  {min}\n  {max}\n  {step}\n  {autocomplete}\n  on:input={onChangerValue} />\n",
    "<script>\n  import { createEventDispatcher } from \"svelte\";\n  import clsx from \"clsx\";\n  // Declar variables.\n  export let id = \"\";\n  export let name = \"\";\n  export let classe = \"\";\n  export let disabled = null;\n  export let journals = [];\n  export let accounts = [];\n  const dispatch = createEventDispatcher();\n  function uuidv4() {\n    return \"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\".replace(/[xy]/g, function(c) {\n      var r = (Math.random() * 16) | 0,\n        v = c == \"x\" ? r : (r & 0x3) | 0x8;\n      return v.toString(16);\n    });\n  }\n  let entries = [];\n\n  // Change value field.\n  const addJournalEntry = () => {\n    entries = [\n      ...entries,\n      { amount: 0, nature: \"D\", account: null, frontendUUID: uuidv4() }\n    ];\n  };\n  function onChangerValue(event, frontendUUID) {\n    let id = event.target.parentNode.id;\n    console.log(event.target.name, event.target.value);\n    entries = entries.map(entry => {\n      if (entry.frontendUUID === frontendUUID) {\n        let obj = {};\n        obj[event.target.name] = event.target.value;\n        return { ...entry, ...obj };\n      }\n      return { ...entry };\n    });\n    console.log(entries);\n    dispatch(\"changeValue\", {\n      name: name,\n      value: entries\n    });\n  }\n\n  // Delete entry.\n  function deleteEntry(line) {\n    entries = entries.filter(entry => entry.frontendUUID != line);\n    dispatch(\"changeValue\", {\n      name: name,\n      value: entries\n    });\n  }\n  $: entries = [...journals];\n</script>\n\n<style>\n  .journals {\n    height: 15rem;\n    overflow: auto;\n  }\n  .journal {\n    display: grid;\n    grid-template-columns: repeat(3, min-content);\n    justify-content: end;\n  }\n  input {\n    font-size: 0.5rem;\n    height: 2rem;\n  }\n  select {\n    font-size: 0.5rem;\n    height: 2rem;\n  }\n  button {\n    font-size: 0.5rem;\n  }\n</style>\n\n<div class=\"journals\">\n  {#each entries as journal, i (journal.frontendUUID)}\n    <div id={i} name=\"journal\" class=\"journal\">\n      <select\n        name=\"nature\"\n        on:input={event => onChangerValue(event, journal.frontendUUID)}>\n        <option value={'D'} selected={journal.nature === 'D'}>D</option>\n        <option value={'C'} selected={journal.nature === 'C'}>C</option>\n      </select>\n      <select\n        name=\"account\"\n        on:input={event => onChangerValue(event, journal.frontendUUID)}>\n        {#each accounts as option (option.value)}\n          <option\n            value={option.value}\n            selected={journal.account === option.value}>\n            {option.title}\n          </option>\n        {:else}\n          <option>Any</option>\n        {/each}\n      </select>\n      <input\n        name=\"amount\"\n        type=\"number\"\n        value={journal.amount}\n        on:input={event => onChangerValue(event, journal.frontendUUID)} />\n      <button\n        type=\"button\"\n        on:click|preventDefault={() => {\n          deleteEntry(journal.frontendUUID);\n        }}>\n        Remove\n      </button>\n    </div>\n  {/each}\n  <button on:click={addJournalEntry}>Adicionar Mais Um</button>\n</div>\n",
    "<script>\n  import { createEventDispatcher } from \"svelte\";\n  import clsx from \"clsx\";\n  // Declar variables.\n  export let id = \"\";\n  export let name = \"\";\n  export let classe = \"\";\n  export let disabled = null;\n  export let journals = [];\n  export let accounts = [];\n  const dispatch = createEventDispatcher();\n  function uuidv4() {\n    return \"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\".replace(/[xy]/g, function(c) {\n      var r = (Math.random() * 16) | 0,\n        v = c == \"x\" ? r : (r & 0x3) | 0x8;\n      return v.toString(16);\n    });\n  }\n  let entries = [];\n\n  // Change value field.\n  const addJournalEntry = () => {\n    entries = [\n      ...entries,\n      { nature: \"D\", account: null, frontendUUID: uuidv4() }\n    ];\n  };\n  function onChangerValue(event, frontendUUID) {\n    let id = event.target.parentNode.id;\n    console.log(event.target.name, event.target.value);\n    entries = entries.map(entry => {\n      if (entry.frontendUUID === frontendUUID) {\n        let obj = {};\n        obj[event.target.name] = event.target.value;\n        return { ...entry, ...obj };\n      }\n      return { ...entry };\n    });\n    console.log(entries);\n    dispatch(\"changeValue\", {\n      name: name,\n      value: entries\n    });\n  }\n\n  // Delete entry.\n  function deleteEntry(line) {\n    entries = entries.filter(entry => entry.frontendUUID != line);\n    dispatch(\"changeValue\", {\n      name: name,\n      value: entries\n    });\n  }\n  $: entries = [...journals];\n  $: console.log(\"[entries]\", entries);\n</script>\n\n<style>\n  .list-files .file {\n    display: flex;\n  }\n  .list-files .file .img,\n  .list-files .file .infos {\n    width: 50%;\n  }\n  .list-files .file .img img {\n    width: 100%;\n  }\n  .journal {\n    display: grid;\n    grid-template-columns: repeat(3, min-content);\n    justify-content: end;\n  }\n  select {\n    font-size: 0.5rem;\n    height: 2rem;\n  }\n  button {\n    font-size: 0.5rem;\n  }\n</style>\n\n<div class=\"journals\">\n  {#each entries as journal, i (journal.frontendUUID)}\n    <div id={i} name=\"journal\" class=\"journal\">\n\n      <select\n        id={`nature${i}`}\n        name=\"nature\"\n        on:input={event => onChangerValue(event, journal.frontendUUID)}>\n        <option value={'D'} selected={journal.nature === 'D'}>D</option>\n        <option value={'C'} selected={journal.nature === 'C'}>C</option>\n      </select>\n\n      <select\n        id={`account${i}`}\n        name=\"account\"\n        on:input={event => onChangerValue(event, journal.frontendUUID)}>\n        {#each accounts as option (option.value)}\n          <option\n            value={option.value}\n            selected={journal.account === option.value}>\n            {option.title}\n          </option>\n        {:else}\n          <option>Any</option>\n        {/each}\n      </select>\n\n      <button\n        type=\"button\"\n        on:click|preventDefault={() => {\n          deleteEntry(journal.frontendUUID);\n        }}>\n        Remove\n      </button>\n    </div>\n  {/each}\n  <button on:click={addJournalEntry} disabled={entries.length > 5}>\n    Adicionar\n  </button>\n</div>\n",
    "<script>\n  import { createEventDispatcher } from \"svelte\";\n  import clsx from \"clsx\";\n  // Declar variables.\n  export let id = \"\";\n  export let name = \"\";\n  export let classe = \"\";\n  export let disabled = null;\n  export let personas = [];\n  export let listOfPersonas = [];\n  const dispatch = createEventDispatcher();\n  function uuidv4() {\n    return \"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\".replace(/[xy]/g, function(c) {\n      var r = (Math.random() * 16) | 0,\n        v = c == \"x\" ? r : (r & 0x3) | 0x8;\n      return v.toString(16);\n    });\n  }\n  let entries = [];\n\n  // Change value field.\n  const addPersonaEntry = () => {\n    entries = [\n      ...entries,\n      { amount: 0, personaUUID: null, frontendUUID: uuidv4() }\n    ];\n  };\n  function onChangerValue(event, frontendUUID) {\n    let id = event.target.parentNode.id;\n    console.log(event.target.name, event.target.value);\n    entries = entries.map(entry => {\n      if (entry.frontendUUID === frontendUUID) {\n        let obj = {};\n        obj[event.target.name] = event.target.value;\n        return { ...entry, ...obj };\n      }\n      return { ...entry };\n    });\n    console.log(entries);\n    dispatch(\"changeValue\", {\n      name: name,\n      value: entries\n    });\n  }\n\n  // Delete entry.\n  function deleteEntry(line) {\n    entries = entries.filter(entry => entry.frontendUUID != line);\n    dispatch(\"changeValue\", {\n      name: name,\n      value: entries\n    });\n  }\n  $: entries = [...personas];\n  $: console.log(\"[persona]\", personas);\n</script>\n\n<style>\n  .persona {\n    display: grid;\n    grid-template-columns: repeat(3, min-content);\n    justify-content: end;\n  }\n  input {\n    font-size: 0.5rem;\n    height: 2rem;\n  }\n  select {\n    font-size: 0.5rem;\n    height: 2rem;\n  }\n  button {\n    font-size: 0.5rem;\n  }\n  .journals {\n    height: 15rem;\n    overflow: auto;\n  }\n</style>\n\n<div class=\"journals\">\n  {#each entries as persona, i (persona.frontendUUID)}\n    <div id={i} name=\"persona\" class=\"persona\">\n      <select\n        name=\"personaUUID\"\n        on:input={event => onChangerValue(event, persona.frontendUUID)}>\n        <option value={'null'} selected={!persona.personaUUID}>\n          ---- SELECIONE PERSONA ----\n        </option>\n        {#each listOfPersonas as option (option.name)}\n          <option\n            value={option.uuid}\n            selected={persona.personaUUID === option.uuid}>\n            {option.name}\n          </option>\n        {:else}\n          <option>Any</option>\n        {/each}\n      </select>\n      <select\n        name=\"tipo\"\n        on:input={event => onChangerValue(event, persona.frontendUUID)}>\n        <option value={'VALUE_TO'} selected={!persona.tipo}>\n          ----- SELECIONAR TIPO -----\n        </option>\n        <option value={'VALUE_FROM'} selected={persona.tipo === 'VALUE_FROM'}>\n          VALUE_FROM\n        </option>\n        <option value={'VALUE_TO'} selected={persona.tipo === 'VALUE_TO'}>\n          VALUE_TO\n        </option>\n      </select>\n      <input\n        name=\"amount\"\n        type=\"number\"\n        value={persona.amount}\n        on:input={event => onChangerValue(event, persona.frontendUUID)} />\n      <button\n        type=\"button\"\n        on:click|preventDefault={() => {\n          deleteEntry(persona.frontendUUID);\n        }}>\n        Remove\n      </button>\n    </div>\n  {/each}\n  <button on:click={addPersonaEntry}>Adicionar Mais Um</button>\n</div>\n",
    "<script>\n  import { createEventDispatcher, onMount } from \"svelte\";\n  import clsx from \"clsx\";\n  // Declar variables.\n  export let id = \"\";\n  export let name = \"\";\n  export let classe = \"\";\n  export let options = [];\n  export let disabled = false;\n  export let multiple = false;\n  const dispatch = createEventDispatcher();\n  // Change value.\n  function onChangeValue(event) {\n    dispatch(\"changeValue\", {\n      name: name,\n      value: event.target.value\n    });\n  }\n  // Insert default value.\n  onMount(() => {\n    if (options.length > 0) {\n      dispatch(\"changeValue\", {\n        name: name,\n        value: options[0].value\n      });\n    }\n  });\n</script>\n\n<style>\n  select {\n    font-size: 0.5rem;\n    height: 2rem;\n    font-weight:600;\n    border-radius: 7px;\n  }\n</style>\n\n<select\n  {id}\n  {name}\n  class={clsx(classe)}\n  {disabled}\n  {multiple}\n  on:input={onChangeValue}>\n  {#each options as option (option.value)}\n    <option value={option.value}>{option.title}</option>\n  {:else}\n    <option>Any</option>\n  {/each}\n</select>\n",
    "<script>\r\n  import { createEventDispatcher } from \"svelte\";\r\n  import clsx from \"clsx\";\r\n\r\n  // Declar variables.\r\n  export let id = \"\";\r\n  export let name = \"\";\r\n  export let classe = \"\";\r\n  export let disabled = null;\r\n  export let journals = [];\r\n  export let groups = [];\r\n  export let value = [];\r\n  const dispatch = createEventDispatcher();\r\n  function uuidv4() {\r\n    return \"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\".replace(/[xy]/g, function(c) {\r\n      var r = (Math.random() * 16) | 0,\r\n        v = c == \"x\" ? r : (r & 0x3) | 0x8;\r\n      return v.toString(16);\r\n    });\r\n  }\r\n  let tags = [];\r\n\r\n  // Change value field.\r\n  const addTag = () => {\r\n    tags = [...tags, { tagUUID: null, frontendUUID: uuidv4() }];\r\n  };\r\n  function onChangerValue(event, frontendUUID) {\r\n    let id = event.target.parentNode.id;\r\n    tags = tags.map(entry => {\r\n      if (entry.frontendUUID === frontendUUID) {\r\n        let obj = {};\r\n        obj[event.target.name] = event.target.value;\r\n        return { ...entry, ...obj };\r\n      }\r\n      return { ...entry };\r\n    });\r\n\r\n    dispatch(\"changeValue\", {\r\n      name: name,\r\n      value: tags\r\n    });\r\n  }\r\n\r\n  // Delete entry.\r\n  function deleteEntry(line) {\r\n    tags = tags.filter(entry => entry.frontendUUID != line);\r\n    dispatch(\"changeValue\", {\r\n      name: name,\r\n      value: tags\r\n    });\r\n  }\r\n  $: tags = [...value];\r\n  $: console.log(\"[tags]\", groups);\r\n  $: console.log(\"[tagGroup\", [...new Set(groups.map(tag => tag.group))]);\r\n</script>\r\n\r\n<style>\r\n  .tag {\r\n    display: grid;\r\n    grid-auto-flow: row;\r\n    grid-template-columns: 4fr 1fr 1fr;\r\n    justify-content: flex-start;\r\n  }\r\n  select,\r\n  input {\r\n    font-size: 0.5rem;\r\n    height: 2rem;\r\n    width: 100%;\r\n  }\r\n  button {\r\n    font-size: 0.5rem;\r\n  }\r\n  main {\r\n    height: 15rem;\r\n    overflow: auto;\r\n  }\r\n</style>\r\n\r\n<main>\r\n\r\n  {#each tags as tag, i (tag.frontendUUID)}\r\n    <div id={i} name=\"tagwrapper\" class=\"tag\">\r\n\r\n      <select\r\n        id={`grupo${i}`}\r\n        name=\"tagUUID\"\r\n        on:input={event => onChangerValue(event, tag.frontendUUID)}>\r\n        <option>Selecionar TAG</option>\r\n        {#each [...new Set(groups.map(tag => tag.group))] as tagGroup}\r\n          <optgroup label={tagGroup}>\r\n            {#each groups.filter(tag => tag.group === tagGroup) as group (group.value + group.title + tagGroup)}\r\n              <option\r\n                value={group.value}\r\n                selected={tag.tagUUID === group.value}>\r\n                {group.title}\r\n              </option>\r\n            {/each}\r\n          </optgroup>\r\n        {/each}\r\n\r\n      </select>\r\n      <input\r\n        name=\"amount\"\r\n        type=\"number\"\r\n        value={tag.amount}\r\n        on:input={event => onChangerValue(event, tag.frontendUUID)} />\r\n      <button\r\n        type=\"button\"\r\n        on:click|preventDefault={() => {\r\n          deleteEntry(tag.frontendUUID);\r\n        }}>\r\n        🗑\r\n      </button>\r\n    </div>\r\n  {/each}\r\n\r\n  <button on:click={addTag}>Adicionar Tag</button>\r\n</main>\r\n",
    "<script>\n  import { createEventDispatcher, onMount } from \"svelte\";\n  import { textAreaResize } from \"./autoresize_textarea\";\n\n  import clsx from \"clsx\";\n  // Declar variables.\n  export let id = \"\";\n  export let name = \"\";\n  export let value = \"\";\n  export let classe = \"\";\n  export let rows = \"\";\n  export let cols = 50;\n  export let required = false;\n  export let disabled = false;\n  export let readonly = false;\n  const dispatch = createEventDispatcher();\n  // Change value.\n  function onChangerValue(event) {\n    let value = event.target.value;\n    let valueWithoutBreak = value.replace(\"\\n\", \" \");\n    dispatch(\"changeValue\", {\n      name: name,\n      value: value\n    });\n  }\n  // Insert default value.\n  onMount(() => {\n    dispatch(\"changeValue\", {\n      name,\n      value\n    });\n  });\n</script>\n\n<style>\n  textarea {\n    border-radius: 7px;\n    width: 23rem;\n    height: 10rem;\n    max-height: 10rem;\n    font-weight: 600;\n    overflow: auto;\n    margin: 0px 0px 8px;\n    resize: none;\n  }\n</style>\n\n<textarea\n  {id}\n  {name}\n  class={clsx(classe)}\n  {required}\n  {disabled}\n  {readonly}\n  {rows}\n  {cols}\n  on:input={onChangerValue}>\n  {value}\n</textarea>\n",
    "<script>\n  import { slide } from \"svelte/transition\";\n  export let node;\n  export let index;\n\n  let showChildren = true;\n</script>\n\n<style>\n  .node .content {\n    display: flex;\n    align-items: center;\n  }\n  .node .content:hover {\n    cursor: pointer;\n  }\n  .node .content .button {\n    width: 20px;\n    height: 20px;\n    transform: rotate(-90deg);\n    transition: transform 0.3s;\n  }\n  .node .content .button.active {\n    transform: rotate(0deg);\n  }\n  .node .content .spacer {\n    width: 20px;\n    height: 20px;\n  }\n  .node .content .name {\n    margin-left: 10px;\n    font-size: 15px;\n  }\n  .children {\n    margin-left: 20px;\n  }\n</style>\n\n<div class=\"node\">\n  <div\n    class=\"content\"\n    on:click={() => {\n      showChildren = !showChildren;\n    }}>\n    {#if node.children}\n      <div class=\"button\" class:active={showChildren}>\n        <svg focusable=\"false\" viewBox=\"0 0 24 24\">\n          <path d=\"M16.59 8.59L12 13.17 7.41 8.59 6 10l6 6 6-6z\" />\n        </svg>\n      </div>\n    {:else}\n      <div class=\"spacer\" />\n    {/if}\n    <slot {node} />\n  </div>\n  {#if node.children && showChildren}\n    <div class=\"children\" transition:slide|local>\n      {#each node.children as _node, i}\n        <svelte:self node={_node} index={i} let:node>\n          <slot {node} />\n        </svelte:self>\n      {/each}\n    </div>\n  {/if}\n</div>\n",
    "<script>\r\n  import { onMount } from \"svelte\";\r\n  import { fade, fly } from \"svelte/transition\";\r\n  import BalancoGroup from \"./BalancoGroup.svelte\";\r\n  import { navigateTo } from \"svelte-router-spa\";\r\n  import { v4 as uuidv4 } from \"uuid\";\r\n  import Tree from \"svelte-tree\";\r\n  import _ from \"lodash\";\r\n  import { flip } from \"svelte/animate\";\r\n  import { dndzone } from \"svelte-dnd-action\";\r\n  import { journalList } from \"./queries/list-journals-2.js\";\r\n  import { dataMockup } from \"./queries/mockup-neo4j.js\";\r\n  import { template } from \"./queries/mockup-template.js\";\r\n  import BalancoOptions from \"./BalancoOptions.svelte\";\r\n  import BalancoChooser from \"./BalancoChooser.svelte\";\r\n  import BalancoCellAmount from \"./BalancoCellAmount.svelte\";\r\n  import { contentGridStore } from \"./store/store.js\";\r\n  import { DrillDownStore } from \"./store/drilldown-store.js\";\r\n  import moment from \"moment\";\r\n  import arrayToTree from \"array-to-tree\";\r\n  import TagsChooser from \"./TagsChooser.svelte\";\r\n  import { splitJournals } from \"./split-journals.js\";\r\n  import { setContext } from \"svelte\";\r\n  const setDrillDownData = data => {\r\n    console.log(\"setting....\", data);\r\n    DrillDownStore.setData(data);\r\n    setContext(\"drillDownData\", data);\r\n  };\r\n  let tree = [];\r\n  const formatter = new Intl.NumberFormat(\"pt-BR\", {\r\n    style: \"currency\",\r\n    currency: \"BRl\"\r\n  });\r\n  const eraseContent = () => {\r\n    while ($contentGridStore.hasChildNodes()) {\r\n      const lastChild = $contentGridStore.lastChild;\r\n      console.log($contentGridStore, \"lastChild\", lastChild);\r\n      lastChild.remove();\r\n    }\r\n  };\r\n  const addContent = () => {\r\n    console.log($contentGridStore);\r\n    const cell = document.createElement(\"span\");\r\n    cell.innerText = \"teste\";\r\n    $contentGridStore.append(cell);\r\n  };\r\n  function removeAllChildNodes(parent) {}\r\n  let flattenGroups = [];\r\n  let contentGrid = null;\r\n  let groupsHTML = null;\r\n  let selectedDate = -1;\r\n  let dateGrid = null;\r\n  let itemsChooser = [\r\n    { id: 1, name: \"balanço\", key: \"journal.`balanço`\" },\r\n    { id: 2, name: \"grupo\", key: \"journal.`grupo`\" },\r\n    { id: 9, name: \"rubrica\", key: \"journal.`rubrica`\" },\r\n    { id: 92, name: \"personaName\", key: \"journal.`personaName`\" },\r\n    {\r\n      id: 3,\r\n      name: \"Natureza do projeto\",\r\n      key: \"journal.`Natureza do projeto`\"\r\n    },\r\n    { id: 4, name: \"Título\", key: \"Título\", key: \"journal.`Título`\" },\r\n    { id: 5, name: \"Tipo\", key: \"journal.`Tipo`\" },\r\n    { id: 7, name: \"Parceria\", key: \"journal.`Parceria`\" }\r\n  ];\r\n  let itemsOptions = [];\r\n\r\n  let accounts = [];\r\n  let headers = [2019, 2020];\r\n\r\n  let dates = [{ year: \"2020\", ref: null }, { year: \"2019\", ref: null }];\r\n  const months = [\r\n    \"Jan\",\r\n    \"Fev\",\r\n    \"Mar\",\r\n    \"Maio\",\r\n    \"Jun\",\r\n    \"Jul\",\r\n    \"Ago\",\r\n    \"Set\",\r\n    \"Out\",\r\n    \"Nov\",\r\n    \"Dec\"\r\n  ];\r\n  let groups = [];\r\n  let timePeriod = \"year\";\r\n  onMount(() => {\r\n    contentGridStore.set(contentGrid);\r\n    accounts = [];\r\n    tree = [];\r\n    showBalance();\r\n    timePeriod = \"year\";\r\n  });\r\n\r\n  const changeOptions = e => {\r\n    flattenGroups = [];\r\n    console.log(\"MUDOU OPÇÕES\", e.detail);\r\n    removeAllChildNodes(groupsHTML);\r\n    itemsOptions = [...e.detail];\r\n    journalList(itemsOptions)\r\n      .then(data => {\r\n        accounts = [...data];\r\n\r\n        setGroups(itemsOptions);\r\n      })\r\n      .catch(err => console.log(err));\r\n  };\r\n  const setGroups = itemsOptions => {\r\n    let groupsAux = [];\r\n    let _groupsAux = [];\r\n    _groupsAux = [\r\n      ..._groupsAux,\r\n      {\r\n        date: true,\r\n        key: \"data\",\r\n        id: \"data\",\r\n        name: \"data\",\r\n        order: -1,\r\n        parent_id: null\r\n      }\r\n    ];\r\n    let itemOptionsWithValues = itemsOptions.map((option, i) => {\r\n      let distinctValues = [\r\n        ...new Set(accounts.map(account => account[option.key]))\r\n      ];\r\n      return { name: option.name, key: option.key, values: distinctValues };\r\n    });\r\n    itemOptionsWithValues.forEach((option, i) => {\r\n      if (i == 0) {\r\n        option.values.forEach((value, j) => {\r\n          _groupsAux = [\r\n            ..._groupsAux,\r\n            {\r\n              header: true,\r\n              key: option.key,\r\n              id: value,\r\n              name: value,\r\n              parent_id: null\r\n            }\r\n          ];\r\n        });\r\n      }\r\n      if (itemsOptions[i + 1]) {\r\n        option.values.forEach(value => {\r\n          let childs = accounts.filter(account => account[option.key] == value);\r\n          childs.forEach(child => {\r\n            _groupsAux = [\r\n              ..._groupsAux,\r\n              {\r\n                amount: child.amount ? formatter.format(child.amount) : \"-\",\r\n                key: itemsOptions[i + 1].name,\r\n                id: child[`${itemsOptions[i + 1].key}`]\r\n                  ? child[`${itemsOptions[i + 1].key}`]\r\n                  : \"---\",\r\n                name: child[`${itemsOptions[i + 1].key}`]\r\n                  ? child[`${itemsOptions[i + 1].key}`]\r\n                  : \"---\",\r\n                parent_id: value\r\n              }\r\n            ];\r\n          });\r\n        });\r\n      }\r\n    });\r\n    _groupsAux = _.uniqBy(_groupsAux, e => e.id + e.parent_id);\r\n\r\n    flattenGroups = [..._groupsAux];\r\n    if (contentGrid) {\r\n      contentGrid.style[\r\n        \"grid-template-rows\"\r\n      ] = `repeat(${flattenGroups.length},1fr)`;\r\n    }\r\n\r\n    _groupsAux = _groupsAux.map(element => {\r\n      const order = template.find(t => t.name === element.name)\r\n        ? template.find(t => t.name === element.name).order\r\n        : null;\r\n      return { ...element, order };\r\n    });\r\n    _groupsAux = _.orderBy(_groupsAux, [\"order\"], [\"asc\"]);\r\n    groups = [...arrayToTree(_groupsAux)];\r\n    tree = [...arrayToTree(_groupsAux)];\r\n    tree = [...tree];\r\n    console.log(\"tree\", tree, \"groupsAux\", _groupsAux);\r\n  };\r\n\r\n  const deepthArray = deepth => {};\r\n  const setCellPosition = (node, pos) => {\r\n    node.style[\"grid-column\"] = `${pos.y + 1}`;\r\n    node.style[\"grid-row\"] = `${pos.x + 1}`;\r\n  };\r\n  const createAmountCell = event => {\r\n    console.log(event.detail);\r\n  };\r\n\r\n  const setPositionMonth = (node, pos) => {\r\n    node.style[\"grid-column\"] = `${pos.y + 1}`;\r\n    node.style[\"grid-row\"] = `${pos.x + 1}`;\r\n  };\r\n  const setPositionYear = (node, data) => {\r\n    if (data.index < data.selectedDate) {\r\n      node.style[\"grid-column\"] = `${data.index + 1}`;\r\n    }\r\n    if (data.index > data.selectedDate) {\r\n      node.style[\"grid-column\"] = `${data.index - 1 + 12}`;\r\n    }\r\n    if (data.index === data.selectedDate) {\r\n      node.style[\"grid-column\"] = `${data.index + 1}`;\r\n    }\r\n  };\r\n  const setPath = (node, n2) => {\r\n    const parentNode =\r\n      node.parentNode.parentNode.parentNode.parentNode.firstChild.firstChild\r\n        .nextElementSibling;\r\n\r\n    if (parentNode) {\r\n      const oldPath = parentNode.getAttribute(\"path\")\r\n        ? parentNode.getAttribute(\"path\")\r\n        : null;\r\n      node.setAttribute(\r\n        \"path\",\r\n        oldPath ? oldPath + \"|\" + n2.name : n2.name ? n2.name : \"null\"\r\n      );\r\n    } else {\r\n      node.setAttribute(\"path\", n2.name ? n2.name : \"null\");\r\n    }\r\n    let path = node.getAttribute(\"path\").split(\"|\");\r\n    console.log(\"accounts\", accounts);\r\n    console.log(\"path\", path);\r\n    let matchOBJ = {};\r\n    path.forEach((value, i) => {\r\n      if (itemsOptions[i] && value) {\r\n        matchOBJ = {\r\n          ...matchOBJ,\r\n          [itemsOptions[i].key]: value === \"---\" ? null : value\r\n        };\r\n      }\r\n      if (!value) {\r\n        console.log(itemsOptions[i].key, value);\r\n      }\r\n    });\r\n    console.log(\"matchObj\", matchOBJ);\r\n    const dataF = _.filter(accounts, _.matches({ ...matchOBJ }));\r\n\r\n    if (timePeriod === \"year\") {\r\n      const years = [...new Set(accounts.map(el => el.year))];\r\n      const dateGrid = node.firstChild.firstChild.nextElementSibling;\r\n      dateGrid.style[\r\n        \"grid-template-columns\"\r\n      ] = `repeat(${years.length},4.55rem)`;\r\n\r\n      years.forEach(year => {\r\n        const data = _.filter(\r\n          dataF,\r\n          _.matches({\r\n            year: year\r\n          })\r\n        );\r\n        const amount = _.sumBy(\r\n          _.filter(dataF, _.matches({ year: year })),\r\n          \"amount\"\r\n        );\r\n       \r\n        const cell = document.createElement(\"div\");\r\n\r\n        if (amount > 0 && !n2.date) {\r\n          cell.style[\"color\"] = `green`;\r\n        }\r\n        if (amount < 0 && !n2.date) {\r\n          cell.style[\"color\"] = `red`;\r\n        }\r\n        if (n2.header && !n2.date) {\r\n          cell.style[\"color\"] = `blue`;\r\n        }\r\n        if (n2.date) {\r\n          cell.innerText = year;\r\n          cell.style[\"color\"] = `#008B8B`;\r\n        } else {\r\n          cell.innerText = formatter.format(amount);\r\n        }\r\n         console.log(\"year,path,amount\", year, matchOBJ, amount,formatter.format(amount));\r\n        cell.addEventListener(\"click\", e => {\r\n          e.preventDefault();\r\n          setDrillDownData(data);\r\n          navigateTo(`drilldown/11`);\r\n        });\r\n        dateGrid.append(cell);\r\n      });\r\n    }\r\n    if (timePeriod === \"month\") {\r\n      const selectedYear = \"2020\";\r\n      const months = [\r\n        \"JAN\",\r\n        \"FEV\",\r\n        \"MAR\",\r\n        \"ABR\",\r\n        \"MAIO\",\r\n        \"JUN\",\r\n        \"JUL\",\r\n        \"AGO\",\r\n        \"SET\",\r\n        \"OUT\",\r\n        \"NOV\",\r\n        \"DEZ\"\r\n      ];\r\n      const dateGrid = node.firstChild.firstChild.nextElementSibling;\r\n      dateGrid.style[\"grid-template-columns\"] = \"repeat(12,4.55rem)\";\r\n\r\n      months.forEach((month, i) => {\r\n        const data = _.filter(\r\n          dataF,\r\n          _.matches({\r\n            year: selectedYear,\r\n            month: `${i < 9 ? \"0\" + (i + 1) : i + 1}`\r\n          })\r\n        );\r\n        const amount = _.sumBy(data, \"amount\");\r\n\r\n        const cell = document.createElement(\"div\");\r\n\r\n        if (amount > 0) {\r\n          cell.style[\"color\"] = `green`;\r\n        }\r\n        if (amount < 0) {\r\n          cell.style[\"color\"] = `red`;\r\n        }\r\n        if (n2.header) {\r\n          cell.style[\"color\"] = `blue`;\r\n        }\r\n        if (n2.date) {\r\n          cell.innerText = months[i] + \"/\" + selectedYear;\r\n\r\n          cell.style[\"color\"] = `#008B8B`;\r\n        } else {\r\n          cell.innerText = formatter.format(amount);\r\n        }\r\n        cell.addEventListener(\"click\", e => {\r\n          e.preventDefault();\r\n          setDrillDownData(data);\r\n          navigateTo(`drilldown/11`);\r\n        });\r\n        dateGrid.append(cell);\r\n      });\r\n    }\r\n  };\r\n  const showBalance = async () => {\r\n    const tags = [\r\n      { id: 1, name: \"balanço\", key: \"journal.balanço\" },\r\n      { id: 2, name: \"grupo\", key: \"journal.grupo\" },\r\n      { id: 9, name: \"rubrica\", key: \"journal.rubrica\" }\r\n    ];\r\n\r\n    itemsOptions = [...tags];\r\n    accounts = await journalList();\r\n    accounts = [...accounts];\r\n    console.log(\"[accounts]\", accounts);\r\n\r\n    setGroups(itemsOptions);\r\n  };\r\n  const addTimePeriod = (node, data) => {};\r\n  const generateReport = async tags => {\r\n    accounts = [];\r\n    tree = [];\r\n    console.log(tags);\r\n    itemsOptions = [...tags];\r\n    accounts = [...(await journalList())];\r\n    accounts = [...splitJournals(accounts, tags)];\r\n    setGroups(itemsOptions);\r\n    console.log(splitJournals(accounts, tags));\r\n  };\r\n  const createNatural = () => {\r\n    console.log(\"clicked\");\r\n    navigateTo(`natural/${uuidv4()}`);\r\n  };\r\n</script>\r\n\r\n<style>\r\n  .grid {\r\n    overflow: auto;\r\n  }\r\n  .date {\r\n    grid-area: date;\r\n    display: grid;\r\n    grid-template-columns: repeat(12, 1fr);\r\n    grid-auto-flow: column;\r\n  }\r\n  .group {\r\n    align-self: flex-start;\r\n    grid-area: group;\r\n    display: grid;\r\n    grid-auto-flow: row;\r\n  }\r\n\r\n  .date-grid {\r\n    display: grid;\r\n    grid-auto-flow: column;\r\n    justify-content: end;\r\n    justify-items: end;\r\n    margin-left: 2.5rem;\r\n  }\r\n  .title-tree {\r\n    display: grid;\r\n    grid-auto-flow: column;\r\n\r\n    width: 100%;\r\n  }\r\n  .name {\r\n    font-size: 0.75rem;\r\n    width: 100%;\r\n  }\r\n  .color {\r\n    color: blue !important;\r\n  }\r\n  main {\r\n    border-radius: 7px;\r\n    transition: all 0.2s;\r\n    background-color: white;\r\n    box-shadow: 0px 4px 12px rgba(0, 0, 0, 0.46);\r\n    height: 30rem;\r\n    width: 55rem;\r\n    margin: 1rem 1rem;\r\n    padding: 0.5rem 0.5rem;\r\n    transform: translate(-50%, -50%);\r\n    position: absolute;\r\n    top: 50%;\r\n    left: 50%;\r\n    display: grid;\r\n    grid-template-rows: 1rem 24rem 1rem;\r\n  }\r\n  .menu__bottom {\r\n  }\r\n  .menu__top {\r\n    transform: translateY(-145%);\r\n  }\r\n  button {\r\n    transform: scale(0.75);\r\n  }\r\n</style>\r\n\r\n<main>\r\n  <div class=\"menu__top\">\r\n    <button\r\n      on:click={() => {\r\n        accounts = [];\r\n        tree = [];\r\n        showBalance();\r\n        timePeriod = 'year';\r\n      }}>\r\n      Ver Balanço | Ano\r\n    </button>\r\n    <button\r\n      on:click={() => {\r\n        accounts = [];\r\n        tree = [];\r\n        showBalance();\r\n        timePeriod = 'month';\r\n      }}>\r\n      Ver Balanço | Mês\r\n    </button>\r\n    <button on:click={createNatural}>Novo Natural</button>\r\n  </div>\r\n  <div class=\"grid\">\r\n\r\n    <div class=\"group\" bind:this={groupsHTML}>\r\n      <Tree {tree} let:node>\r\n        <div\r\n          class=\"name\"\r\n          name={node.name}\r\n          use:setPath={node}\r\n          class:color={node.header}>\r\n\r\n          <div class=\"title-tree\">\r\n            <span>{node.date ? '--' : node.name}</span>\r\n            <div class=\"date-grid\" />\r\n          </div>\r\n\r\n        </div>\r\n      </Tree>\r\n    </div>\r\n\r\n  </div>\r\n  <div class=\"menu__bottom\">\r\n    <TagsChooser {generateReport} />\r\n  </div>\r\n</main>\r\n",
    "<script>\r\n  import _ from \"lodash\";\r\n  import { setContext, getContext, onMount } from \"svelte\";\r\n  import { beforeUpdate, afterUpdate } from \"svelte\";\r\n\r\n  export let group;\r\n\r\n  export let data = [];\r\n  export let index = 0;\r\n  let walker = 0;\r\n\r\n  const formatter = new Intl.NumberFormat(\"pt-BR\", {\r\n    style: \"currency\",\r\n    currency: \"BRl\"\r\n  });\r\n\r\n  const hasArray = () => group.some(g => _.isArray(g));\r\n\r\n  const setCells = node => {\r\n    node.style[\"grid-column\"] = `${group.year == \"2020\" ? 1 : 2}`;\r\n    node.style[\"grid-row\"] = `${index + 1}`;\r\n  };\r\n</script>\r\n\r\n<style>\r\n  span {\r\n    font-size: 0.65rem;\r\n  }\r\n</style>\r\n\r\n{#if group.amount}\r\n  <div use:setCells={group}>\r\n    <span>{formatter.format(group.amount)}({walker})</span>\r\n  </div>\r\n{:else}\r\n  <div use:setCells={group}>\r\n    <span>{formatter.format(0)}</span>\r\n  </div>\r\n{/if}\r\n{#if _.isArray(group.children)}\r\n  {#each group.children as g}\r\n    <svelte:self group={g} index={index + 1} {data} />\r\n  {/each}\r\n{/if}\r\n",
    "<script>\r\n  import { onMount } from \"svelte\";\r\n  import { fade, fly } from \"svelte/transition\";\r\n  import BalancoGroup from \"./BalancoGroup.svelte\";\r\n  import _ from \"lodash\";\r\n  import { flip } from \"svelte/animate\";\r\n  import { dndzone } from \"svelte-dnd-action\";\r\n  export let items;\r\n\r\n  const flipDurationMs = 300;\r\n  function handleDndConsider(e) {\r\n    items = e.detail.items;\r\n  }\r\n  function handleDndFinalize(e) {\r\n    items = [...e.detail.items];\r\n  }\r\n</script>\r\n\r\n<style>\r\n  .section-dnd {\r\n    width: 50%;\r\n    padding: 0.3em;\r\n    border: 1px solid black;\r\n    /* this will allow the dragged element to scroll the list */\r\n    overflow: scroll;\r\n    height: 200px;\r\n  }\r\n  .div-dnd {\r\n    width: 50%;\r\n    padding: 0.2em;\r\n    border: 1px solid blue;\r\n    margin: 0.15em 0;\r\n  }\r\n</style>\r\n\r\n<section\r\n  class=\"section-dnd\"\r\n  use:dndzone={{ items, flipDurationMs }}\r\n  on:consider={handleDndConsider}\r\n  on:finalize={handleDndFinalize}>\r\n  {#each items as item (item.id)}\r\n    <div class=\"div-dnd\" animate:flip={{ duration: flipDurationMs }}>\r\n      {item.name}\r\n    </div>\r\n  {/each}\r\n</section>\r\n",
    "<script>\r\n  import _ from \"lodash\";\r\n  import { contentGridStore } from \"./store/store.js\";\r\n  export let group;\r\n  export let itemsOptions = [];\r\n  export let selectedDate = -1;\r\n  export let depth = 0;\r\n  export let dates = [];\r\n  export let maxDepth = 0;\r\n  export let path = \"\";\r\n  export let data = [];\r\n  import { createEventDispatcher } from \"svelte\";\r\n  export let index = 0;\r\n\r\n  let node = null;\r\n  let nodeChildren = null;\r\n  const dispatch = createEventDispatcher();\r\n  const formatter = new Intl.NumberFormat(\"pt-BR\", {\r\n    style: \"currency\",\r\n    currency: \"BRl\"\r\n  });\r\n  const hasArray = () => group.some(g => _.isArray(g));\r\n  const setCells = (node, depth) => {\r\n    if (depth == maxDepth) {\r\n      node.style[\r\n        \"grid-template-columns\"\r\n      ] = `repeat(${maxDepth},3rem) repeat(${dates.length + 1},1fr)`;\r\n    } else if (depth === 0) {\r\n      node.style[\"grid-template-columns\"] = `3rem  repeat(${dates.length +\r\n        1},1fr)`;\r\n    } else {\r\n      node.style[\r\n        \"grid-template-columns\"\r\n      ] = `repeat(${depth},3rem) repeat(${dates.length + 1},1fr)`;\r\n    }\r\n  };\r\n  $: if (group && itemsOptions) {\r\n    if (node && nodeChildren) {\r\n      if (depth === maxDepth) {\r\n        let ref = node;\r\n\r\n        let path = ref.getAttribute(\"path\").split(\"-\");\r\n        let matchOBJ = {};\r\n        path.forEach((value, i) => {\r\n          matchOBJ = {\r\n            ...matchOBJ,\r\n            [itemsOptions[i].key]: value === \"S/A\" ? null : value\r\n          };\r\n        });\r\n\r\n        const dataF = _.filter(data, _.matches({ ...matchOBJ }));\r\n        console.log(dataF, matchOBJ);\r\n        const rowNumber = [].indexOf.call(\r\n          nodeChildren.parentNode.parentNode.children,\r\n          nodeChildren.parentNode\r\n        );\r\n        dataF.forEach(entry => {\r\n          let columnNumber = -1;\r\n          const cell = document.createElement(\"div\");\r\n          if (selectedDate === -1) {\r\n            columnNumber = dates.map(d => d.year).indexOf(entry.year);\r\n          }\r\n          cell.style[\"grid-row\"] = `${1}`;\r\n          cell.style[\"grid-column\"] = `${maxDepth + columnNumber + 2}`;\r\n          console.log(\r\n            \"VALOR MONTANTE\",\r\n            \"Coluna\",\r\n            `${maxDepth + columnNumber + 2}`\r\n          );\r\n          console.log(\"[maxDepth]\", maxDepth, columnNumber, dates);\r\n          const span = document.createElement(\"span\");\r\n\r\n          span.style[\"font-size\"] = `0.65rem`;\r\n          span.innerText = formatter.format(entry.amount);\r\n          const year = document.createElement(\"span\");\r\n          year.style[\"font-size\"] = `0.35rem`;\r\n          //   year.innerText = `(${entry.year})`;\r\n          // span.append(year);\r\n          cell.append(span);\r\n\r\n          node.append(cell);\r\n          //$contentGridStore.append(cell);\r\n        });\r\n      } else {\r\n        let ref = node;\r\n\r\n        let path = ref.getAttribute(\"path\").split(\"-\");\r\n        let matchOBJ = {};\r\n        path.forEach((value, i) => {\r\n          matchOBJ = {\r\n            ...matchOBJ,\r\n            [itemsOptions[i].key]: value === \"S/A\" ? null : value\r\n          };\r\n        });\r\n\r\n        const dataF = _.filter(data, _.matches({ ...matchOBJ }));\r\n        console.log(\"SUMBY\", dataF, matchOBJ);\r\n        const rowNumber = [].indexOf.call(\r\n          nodeChildren.parentNode.parentNode.children,\r\n          nodeChildren.parentNode\r\n        );\r\n        dates.forEach((date, columnNumber) => {\r\n          const cell = document.createElement(\"div\");\r\n          let amountYear = 0;\r\n          if (selectedDate == -1) {\r\n            amountYear = _.sumBy(\r\n              _.filter(dataF, _.matches({ year: date.year })),\r\n              \"amount\"\r\n            );\r\n          }\r\n          if (depth === 0) {\r\n            const span = document.createElement(\"span\");\r\n            cell.style[\"grid-row\"] = `${1}`;\r\n            cell.style[\"grid-column\"] = `${columnNumber + 3}`;\r\n            span.innerText = date.year; //formatter.format(amountYear);\r\n            cell.append(span);\r\n\r\n            node.append(cell);\r\n          } else {\r\n            cell.style[\"grid-row\"] = `${1}`;\r\n            cell.style[\"grid-column\"] = `${depth + columnNumber + 2}`;\r\n            const span = document.createElement(\"span\");\r\n\r\n            span.style[\"font-size\"] = `0.65rem`;\r\n\r\n            if (depth === 1) {\r\n              span.style[\"color\"] = `blue`;\r\n            }\r\n            if (depth === 0) {\r\n              span.style[\"color\"] = `green`;\r\n            }\r\n            span.innerText = formatter.format(amountYear); //formatter.format(amountYear);\r\n            cell.append(span);\r\n\r\n            node.append(cell);\r\n          }\r\n        });\r\n      }\r\n    }\r\n  }\r\n  const setPosition = (node, depth) => {\r\n    const data = group.data;\r\n    const rowNumber = [].indexOf.call(\r\n      node.parentNode.parentNode.children,\r\n      node.parentNode\r\n    );\r\n    if (depth === maxDepth) {\r\n      node.style[\"grid-column\"] = `${depth + 1}`;\r\n    } else {\r\n      node.style[\"grid-column\"] = `${depth + 1}`;\r\n      if (depth === 0) {\r\n        node.style[\"color\"] = `green`;\r\n      }\r\n      if (depth === 1) {\r\n        node.style[\"color\"] = `blue`;\r\n      }\r\n    }\r\n\r\n    // data.forEach(number => {\r\n    //   const cell = document.createElement(\"div\");\r\n    //   const columnNumber = dates.map(d => d.year).indexOf(number.year);\r\n    //   console.log(\r\n    //     columnNumber,\r\n    //     dates.map(d => d.year).indexOf(number.year),\r\n    //     number,\r\n    //     dates\r\n    //   );\r\n    //   cell.style[\"grid-row\"] = `${rowNumber + 1}`;\r\n    //   cell.style[\"grid-column\"] = `${columnNumber + 1}`;\r\n    //   const span = document.createElement(\"span\");\r\n\r\n    //   span.style[\"font-size\"] = `0.65rem`;\r\n    //   span.innerText = formatter.format(number.amount);\r\n    //   cell.append(span);\r\n\r\n    //   $contentGridStore.append(cell);\r\n    // });\r\n  };\r\n</script>\r\n\r\n<style>\r\n  .balanco-group {\r\n    display: grid;\r\n\r\n    grid-auto-flow: row;\r\n  }\r\n</style>\r\n\r\n<div\r\n  class=\"balanco-group\"\r\n  use:setCells={depth}\r\n  key={group.key}\r\n  bind:this={node}\r\n  path={path ? path + '-' + group.name : group.name}\r\n  {depth}\r\n  balance-group={true}>\r\n  <span use:setPosition={depth} bind:this={nodeChildren}>{group.name}</span>\r\n</div>\r\n{#if _.isArray(group.children)}\r\n  {#each group.children as g}\r\n    <svelte:self\r\n      group={g}\r\n      {data}\r\n      {selectedDate}\r\n      {itemsOptions}\r\n      path={path ? path + '-' + group.name : group.name}\r\n      depth={depth + 1}\r\n      {dates}\r\n      {maxDepth}\r\n      index={index + 1} />\r\n  {/each}\r\n{/if}\r\n",
    "<script>\r\n  import { onMount } from \"svelte\";\r\n  import { fade, fly } from \"svelte/transition\";\r\n  import BalancoGroup from \"./BalancoGroup.svelte\";\r\n  import _ from \"lodash\";\r\n  import { flip } from \"svelte/animate\";\r\n  import { dndzone } from \"svelte-dnd-action\";\r\n  import { createEventDispatcher } from \"svelte\";\r\n  const dispatch = createEventDispatcher();\r\n  export let items;\r\n  \r\n\r\n  const flipDurationMs = 300;\r\n  function handleDndConsider(e) {\r\n    items = e.detail.items;\r\n  }\r\n  function handleDndFinalize(e) {\r\n    items = [...e.detail.items];\r\n    dispatch(\"change\", items);\r\n  }\r\n</script>\r\n\r\n<style>\r\n  .section-dnd {\r\n    width: 50%;\r\n    padding: 0.3em;\r\n    border: 1px solid black;\r\n    /* this will allow the dragged element to scroll the list */\r\n    overflow: scroll;\r\n    height: 200px;\r\n  }\r\n  .div-dnd {\r\n    width: 50%;\r\n    padding: 0.2em;\r\n    border: 1px solid blue;\r\n    margin: 0.15em 0;\r\n  }\r\n</style>\r\n\r\n<section\r\n  class=\"section-dnd\"\r\n  use:dndzone={{ items, flipDurationMs }}\r\n  on:consider={handleDndConsider}\r\n  on:finalize={handleDndFinalize}>\r\n  {#each items as item (item.id)}\r\n    <div class=\"div-dnd\" animate:flip={{ duration: flipDurationMs }}>\r\n      {item.name}\r\n    </div>\r\n  {/each}\r\n</section>\r\n",
    "<script>\n  import { formRetrieve } from \"./queries/form-retrieve.js\";\n\n  import { get } from \"svelte/store\";\n  import { valuesForm, Field } from \"svelte-formly\";\n  import { accountList } from \"./queries/account-list.js\";\n  import { personaList } from \"./queries/persona-list.js\";\n  import { tagsList } from \"./queries/tags-list.js\";\n  import { storage } from \"./firebase/firebase.js\";\n  import { onMount } from \"svelte\";\n  import { v4 as uuidv4 } from \"uuid\";\n  import { navigateTo } from \"svelte-router-spa\";\n  import { fly } from \"svelte/transition\";\n  import { nodeRetrieve } from \"./queries/node-retrieve\";\n\n  export let onSubmit;\n  export let parentUUID;\n  export let uuid;\n  export let cancelFn;\n  export let type;\n  export let onUpdate;\n  let storageRef = storage.ref();\n  let values = {};\n  let retrieved = null;\n  let fields = null;\n  let listOfPersonas = [];\n  let accounts = [];\n  let groups = [];\n  const blobFromURL = async url => {\n    let blob = await fetch(url, { mode: \"cors\" }).then(r => {\n      return r.blob();\n    });\n    return blob;\n  };\n  const retrieveNode = async id => {\n    retrieved = await nodeRetrieve(id);\n    if (retrieved) {\n      fields = retrieved.contents;\n\n      fields = await Promise.all(\n        fields.map(async field => {\n          if (field.type === \"file\" && field.value.length > 0) {\n            let files = await Promise.all(\n              field.value.map(async file => {\n                const blob = await blobFromURL(file.url);\n                console.log(file);\n                const newFile = new File([blob], file.filename);\n                newFile.url = file.url;\n                return newFile;\n              })\n            );\n            return { ...field, value: [...files] };\n          }\n          return field;\n        })\n      );\n    }\n  };\n  onMount(() => {\n    if (uuid) {\n      retrieveNode(uuid);\n    }\n    tagsList()\n      .then(data => (groups = [...data].filter(acc => !!acc.value)))\n      .catch(err => console.log(err));\n    accountList()\n      .then(data => (accounts = [...data].filter(acc => !!acc.value)))\n      .catch(err => console.log(err));\n    personaList()\n      .then(data => (listOfPersonas = [...data]))\n      .catch(err => console.log(err));\n  });\n\n  const saveToFirestore = async file => {\n    const filePath = `/teste-neo4j-mongo/sistema-contabil/${file.name}`;\n    const uploadTask = await storageRef.child(filePath).put(file, {\n      //customMetadata: {\n      // lancamento: uuidLancamento\n      // }\n    });\n    const url = await storageRef.child(filePath).getDownloadURL();\n    return url;\n  };\n  const handleFiles = async form => {\n    let naturalFormatted = form.fields.map(async data => {\n      if (data.type === \"file\" && data.value.length > 0) {\n        let files = data.value.map(async file => {\n          return {\n            filename: file.name,\n            url: file.url ? file.url : await saveToFirestore(file)\n          };\n        });\n        files = await Promise.all(files);\n        return {\n          ...data,\n          value: [...files]\n        };\n      }\n      return { ...data };\n    });\n    naturalFormatted = await Promise.all(naturalFormatted);\n    return naturalFormatted;\n  };\n  const onSubmitForm = async form => {\n    const data = get(valuesForm);\n\n    if (data && data[uuid] && data[uuid].isValidForm) {\n      values = data[uuid].values;\n    }\n\n    let fields = await handleFiles(form);\n    //   createNode(naturalFormatted, values, form.type);\n    onSubmit({ fields, values, type: form.type, parentUUID })\n      .then(async () => {\n        retrieved = await nodeRetrieve(uuid);\n      })\n      .catch(err => console.log(\"error onSubmit\"));\n  };\n\n  import { nodeUpdate } from \"./queries/node-update\";\n  const updateNode = async (fields, values, oldUUID) => {\n    console.log(fields, values, oldUUID);\n    nodeUpdate(fields, values, uuid)\n      .then(() => console.log(\"updated\"))\n      .catch(err => console.log(\"erro ao update\", err));\n  };\n  const onUpdateForm = async () => {\n    const data = get(valuesForm);\n    if (data && data[uuid] && data[uuid].isValidForm) {\n      values = data[uuid].values;\n    }\n    let naturalFormatted = fields.map(async data => {\n      if (data.type === \"file\" && data.value.length > 0) {\n        let files = data.value.map(async file => {\n          return { filename: file.name, url: await saveToFirestore(file) };\n        });\n        files = await Promise.all(files);\n        return {\n          ...data,\n          value: [...files]\n        };\n      }\n      return { ...data };\n    });\n    naturalFormatted = await Promise.all(naturalFormatted);\n    console.log(naturalFormatted);\n    console.log(values);\n    if (onUpdate) {\n      onUpdate({\n        fields: naturalFormatted,\n        values,\n        uuid,\n        parentUUID,\n        type\n      });\n    } else {\n      updateNode(naturalFormatted, values, uuid);\n    }\n  };\n  //LOGs\n  $: console.log(\"[retrieved]\", retrieved);\n  $: console.log(\"[groups]\", groups);\n</script>\n\n<style>\n  hr {\n    background-color: #f4f3f4;\n    height: 1px;\n    border: 0;\n    margin-top: 1rem;\n    margin-bottom: 0.7rem;\n  }\n  button {\n    margin-right: 0.5rem;\n  }\n  form {\n    height: 100%;\n    display: flex;\n    flex-direction: column;\n    justify-content: flex-end;\n  }\n  .fields {\n    flex: auto;\n  }\n  .wrapper {\n    width: 100%;\n    height: 100%;\n  }\n</style>\n\n<div class=\"wrapper\">\n  {#await formRetrieve(type)}\n    Carregando Formulario\n  {:then response}\n\n    <form\n      in:fly={{ y: -20, duration: 300, delay: 0 }}\n      on:submit|preventDefault={() => {}}>\n      <div class=\"fields\">\n        {#if fields}\n          <Field {fields} {uuid} {accounts} {groups} {listOfPersonas} />\n        {:else}\n          <Field\n            fields={response.fields}\n            {uuid}\n            {accounts}\n            {listOfPersonas}\n            {groups} />\n        {/if}\n      </div>\n      <hr />\n      <div>\n        <button\n          class=\"btn btn-primary\"\n          type=\"submit\"\n          on:click={() => {\n            !!retrieved ? onUpdateForm() : onSubmitForm(response);\n          }}>\n          {!!retrieved == true ? 'Atualizar' : 'Salvar'}\n        </button>\n        <button on:click={cancelFn}>Cancelar</button>\n      </div>\n    </form>\n\n  {/await}\n</div>\n",
    "<script>\r\n  import { Route } from \"svelte-router-spa\";\r\n  import { fly } from \"svelte/transition\";\r\n  import Balanco from \"./Balanco.svelte\";\r\n  import NaturalList from \"./NaturalList.svelte\";\r\n  import { navigateTo } from \"svelte-router-spa\";\r\n  import { v4 as uuidv4 } from \"uuid\";\r\n  import PersonaForm from \"./PersonaForm.svelte\";\r\n  import TagForm from \"./TagForm.svelte\";\r\n  export let currentRoute;\r\n  const params = {};\r\n  let showBalanco = false;\r\n  let showBalancodbl = false;\r\n  let showList = false;\r\n  let personaForm = false;\r\n  let tagForm = false;\r\n  const hidePersona = () => {\r\n    personaForm = false;\r\n  };\r\n  const hideTag = () => {\r\n    tagForm = false;\r\n  };\r\n  const createNatural = () => {\r\n    console.log(\"clicked\");\r\n    navigateTo(`natural/${uuidv4()}`);\r\n  };\r\n</script>\r\n\r\n<style>\r\n  .app {\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    height: 100%;\r\n  }\r\n\r\n  .title {\r\n    color: #c2c5c9;\r\n    position: absolute;\r\n    font-size: 3rem;\r\n    /* padding: 2rem 2rem; */\r\n    top: 2rem;\r\n    left: 2rem;\r\n    z-index: -1;\r\n  }\r\n  .btn__float {\r\n    display: grid;\r\n    grid-auto-flow: row;\r\n\r\n    position: absolute;\r\n    bottom: 2rem;\r\n    right: 2rem;\r\n  }\r\n  button {\r\n    border-radius: 7px;\r\n    transition: all 0.2s;\r\n    box-shadow: 0px 4px 12px rgba(0, 0, 0, 0.46);\r\n  }\r\n  button:hover {\r\n    transform: translateX(-3px);\r\n  }\r\n</style>\r\n\r\n<div class=\"app\">\r\n  <div\r\n    class=\"title\"\r\n    in:fly={{ x: 200, duration: 300 }}\r\n    out:fly={{ x: -200, duration: 300 }}>\r\n    Contabilidade Inteligente\r\n  </div>\r\n  <Route {currentRoute} {params} />\r\n  <div class=\"btn__float\">\r\n    <button on:click={() => navigateTo(`natural-with-all/`)}>\r\n      Ver Naturals\r\n    </button>\r\n    <button on:click={() => navigateTo(`/`)}>Ver Balanço</button>\r\n    <button\r\n      on:click={() => {\r\n        personaForm = !personaForm;\r\n      }}>\r\n      Nova Persona\r\n    </button>\r\n    <button\r\n      on:click={() => {\r\n        tagForm = !tagForm;\r\n      }}>\r\n      Nova Tag\r\n    </button>\r\n  </div>\r\n  {#if personaForm}\r\n    <PersonaForm {hidePersona} />\r\n  {/if}\r\n  {#if tagForm}\r\n    <TagForm {hideTag} />\r\n  {/if}\r\n</div>\r\n",
    "<script>\r\n  import { onMount } from \"svelte\";\r\n  import { fade, fly } from \"svelte/transition\";\r\n  import { naturalList } from \"./queries/natural-list.js\";\r\n  import { nodeCreate } from \"./queries/node-create.js\";\r\n  import { v4 as uuidv4 } from \"uuid\";\r\n  import { navigateTo } from \"svelte-router-spa\";\r\n  import moment from \"moment\";\r\n  let naturals = [];\r\n  onMount(() => {\r\n    naturalList()\r\n      .then(data => (naturals = [...data]))\r\n      .catch(err => console.log(err));\r\n  });\r\n  // DEBUG\r\n\r\n  $: console.log(\"[naturals]\", naturals);\r\n  const createNatural = () => {\r\n    console.log(\"clicked\");\r\n    navigateTo(`natural/${uuidv4()}`);\r\n  };\r\n  const editNatural = naturalUUID => {\r\n    console.log(\"editNatural\", naturalUUID);\r\n    navigateTo(`natural/${naturalUUID}/edit`);\r\n  };\r\n  const scrollY = node => {\r\n    const html = node;\r\n    const scrollFn = e => {\r\n      var delta = Math.max(-1, Math.min(1, e.wheelDelta || -e.detail));\r\n\r\n      html.scrollLeft -= delta * 80; // Multiplied by 40\r\n      e.preventDefault();\r\n    };\r\n    node.addEventListener(\"mousewheel\", scrollFn, false);\r\n  };\r\n</script>\r\n\r\n<style>\r\n  main {\r\n    box-shadow: 0px 4px 12px rgba(0, 0, 0, 0.26);\r\n    display: flex;\r\n    position: relative;\r\n    justify-content: center;\r\n    align-items: center;\r\n    height: 100%;\r\n    /* height: 80vh; */\r\n    padding: 4rem 2rem;\r\n    overflow-x: scroll;\r\n    scroll-snap-type: x proximity;\r\n  }\r\n  .grid {\r\n    display: grid;\r\n    grid-template-columns: 1fr;\r\n\r\n    width: 100%;\r\n    grid-gap: 2rem;\r\n    grid-template-columns: repeat(9, 10rem);\r\n  }\r\n\r\n  .item {\r\n    border-radius: 7px;\r\n    cursor: pointer;\r\n    transition: all 0.2s;\r\n    background-color: white;\r\n    height: 10rem;\r\n    width: 10rem;\r\n    display: grid;\r\n    grid-template-rows: 1.5rem 1fr min-content;\r\n    overflow: hidden;\r\n    grid-template-areas:\r\n      \"title\"\r\n      \"content\"\r\n      \"lastchanged\";\r\n    box-shadow: 0px 4px 12px rgba(0, 0, 0, 0.46);\r\n    position: relative;\r\n  }\r\n  .item:hover {\r\n    transform: translateY(-5px);\r\n  }\r\n  .title {\r\n    color: #c2c5c9;\r\n    position: absolute;\r\n    font-size: 3rem;\r\n    /* padding: 2rem 2rem; */\r\n    top: 2rem;\r\n    left: 2rem;\r\n    z-index: -1;\r\n  }\r\n  .item__content {\r\n    grid-area: content;\r\n    color: #4b4b4c;\r\n    padding: 0.5rem 1rem;\r\n    font-size: 1rem;\r\n    font-weight: 600;\r\n  }\r\n  .item__title {\r\n    grid-area: title;\r\n    color: #4b4b4c;\r\n    display: flex;\r\n    font-weight: 600;\r\n    justify-content: flex-start;\r\n    align-items: center;\r\n    background-color: #f2f2f3;\r\n    font-size: 0.5rem;\r\n    padding: 0 1rem;\r\n  }\r\n  .item__lastchanged {\r\n    color: #bfbebf;\r\n    grid-area: lastchanged;\r\n    font-size: 0.5rem;\r\n    padding: 0.5rem 1rem;\r\n  }\r\n  .btn--add {\r\n    cursor: pointer;\r\n\r\n    transform: translate(-50%, -50%);\r\n    justify-content: center;\r\n    display: flex;\r\n    background-color: lightsalmon;\r\n    height: 5rem;\r\n    width: 5rem;\r\n    border-radius: 50%;\r\n    align-items: center;\r\n    font-size: 5rem;\r\n    color: white;\r\n    box-shadow: 0px 0px 2px rgba(0, 0, 0, 0.95);\r\n    transition: all 0.5s;\r\n  }\r\n  .btn--add:hover {\r\n    transform: translate(-50%, -50%) scale(1.05);\r\n  }\r\n</style>\r\n\r\n<main use:scrollY>\r\n  <div\r\n    class=\"title\"\r\n    in:fly={{ x: 200, duration: 300 }}\r\n    out:fly={{ x: -200, duration: 300 }}>\r\n    Lista de Naturals\r\n  </div>\r\n  <div class=\"grid\">\r\n    {#each naturals as natural (natural.uuid)}\r\n      <div\r\n        class=\"item\"\r\n        in:fly={{ x: 200, duration: 300, delay: 150 }}\r\n        on:click={() => editNatural(natural.uuid)}>\r\n        <div class=\"item__title\">Lançamento Natural</div>\r\n        <div class=\"item__content\">{natural.title}</div>\r\n        <div class=\"item__lastchanged\">\r\n          {moment().format('HH:MM, DD/MM/YYYY')}\r\n        </div>\r\n      </div>\r\n    {/each}\r\n\r\n  </div>\r\n\r\n</main>\r\n",
    "<script>\r\n  import { fade, fly } from \"svelte/transition\";\r\n  import { IntentStore } from \"../store/intent-store.js\";\r\n\r\n  import { v4 as uuidv4 } from \"uuid\";\r\n  export let hideActions;\r\n  export let actions;\r\n  export let parentUUID;\r\n  export let rootUUID;\r\n  //{ text: \"Atribuir Valor\", endNode: [\"Value\"], relationship: \"VALUE_TO\" }\r\n\r\n  IntentStore.subscribe(data => console.log(\"[intentStore]\", data));\r\n  const addForm = action => {\r\n    IntentStore.addForm({\r\n      type: action.intent,\r\n      title: action.title,\r\n      onSubmit: action.onSubmit,\r\n      onDelete: action.onDelete,\r\n      onUpdate: action.onUpdate,\r\n      parentUUID: parentUUID,\r\n      frontendUUID: uuidv4(),\r\n      rootUUID: rootUUID\r\n    });\r\n    hideActions();\r\n  };\r\n</script>\r\n\r\n<style>\r\n  .main {\r\n    z-index: 9999999;\r\n    font-size: 0.7rem;\r\n    font-weight: 600;\r\n    height: 15rem;\r\n    width: 10rem;\r\n    background-color: #eeedef;\r\n    position: absolute;\r\n    bottom: 1rem;\r\n    right: -7rem;\r\n    border-radius: 10px;\r\n    border-color: white;\r\n    color: #575557;\r\n    border: 2px solid white;\r\n    box-shadow: 0px 4px 12px rgba(0, 0, 0, 0.26);\r\n  }\r\n  hr {\r\n    background-color: rgba(196, 196, 196, 0.5);\r\n    height: 1px;\r\n    border: 0;\r\n    width: 100%;\r\n  }\r\n  .grid {\r\n    display: grid;\r\n    padding-top: 0.5rem;\r\n    justify-items: center;\r\n  }\r\n  .menu__item {\r\n    display: flex;\r\n    flex-direction: column;\r\n    width: 100%;\r\n    /* justify-content: center; */\r\n    align-items: center;\r\n  }\r\n  .menu__item:hover {\r\n  }\r\n</style>\r\n\r\n<div\r\n  class=\"main\"\r\n  in:fly={{ y: 20, opacity: 0.2, duration: 300 }}\r\n  out:fly={{ y: -20, opacity: 0.2, duration: 300 }}>\r\n  <div class=\"grid\">\r\n    {#each actions as action (action.id)}\r\n      <div class=\"menu__item\">\r\n        <div on:click={() => addForm({ ...action })}>{action.text}</div>\r\n        <hr />\r\n      </div>\r\n    {/each}\r\n  </div>\r\n</div>\r\n",
    "<script>\r\n  import { fade, fly } from \"svelte/transition\";\r\n  import { onMount } from \"svelte\";\r\n  import { v4 as uuidv4 } from \"uuid\";\r\n  import { navigateTo } from \"svelte-router-spa\";\r\n  import FormManager from \"./../FormManager.svelte\";\r\n  import NaturalActions from \"./NaturalActions.svelte\";\r\n  import NaturalOptions from \"./NaturalOptions.svelte\";\r\n  import { nodeCreate } from \"../queries/node-create.js\";\r\n  import { deleteNatural } from \"../queries/intentions/natural-delete.js\";\r\n  import { IntentStore } from \"../store/intent-store.js\";\r\n  import { actions } from \"../actions/actions.js\";\r\n  import { naturalFormList } from \"../queries/natural-form-list.js\";\r\n  import { NotificationDisplay, notifier } from \"@beyonk/svelte-notifications\";\r\n  let showActions = {};\r\n  let showOptions = {};\r\n  export let currentRoute;\r\n\r\n  let uuid = currentRoute.namedParams.id;\r\n  $: console.log(\"[currentRoute]\", currentRoute);\r\n  const hideActions = uuid => (showActions[uuid] = false);\r\n  const createNatural = ({ fields, values, type, parentUUID }) => {\r\n    return nodeCreate(fields, values, type, uuid)\r\n      .then(() => {\r\n        notifier.success(\"Natural Criado\");\r\n      })\r\n      .catch(err => console.log(\"err created\", err));\r\n  };\r\n  const backHome = () => {\r\n    navigateTo(\"/\");\r\n    IntentStore.reset();\r\n  };\r\n\r\n  const getForms = async parentUUID => {\r\n    const forms = await naturalFormList(parentUUID);\r\n    const formsWithOnSubmit = forms.map(form => {\r\n      const action = actions.find(action => action.intent === form.type) || {};\r\n      const fn = () => console.log(\"empty\");\r\n      return {\r\n        ...form,\r\n        frontendUUID: form.uuid,\r\n        onSubmit: action.onSubmit || fn,\r\n        onUpdate: action.onUpdate || fn,\r\n        onDelete: action.onDelete || fn\r\n      };\r\n    });\r\n\r\n    IntentStore.setForms(formsWithOnSubmit);\r\n    console.log(formsWithOnSubmit);\r\n  };\r\n  onMount(() => {\r\n    getForms(uuid);\r\n  });\r\n  const scrollY = node => {\r\n    const html = node;\r\n    const scrollFn = e => {\r\n      var delta = Math.max(-1, Math.min(1, e.wheelDelta || -e.detail));\r\n\r\n      html.scrollLeft -= delta * 80; // Multiplied by 40\r\n      e.preventDefault();\r\n    };\r\n    node.addEventListener(\"mousewheel\", scrollFn, false);\r\n  };\r\n</script>\r\n\r\n<style>\r\n  main {\r\n    /* height: 100%;\r\n\r\n    display: flex;\r\n    align-items: center;\r\n    padding: 0 2rem; */\r\n    display: grid;\r\n    grid-gap: calc(20px / 2);\r\n    grid-auto-flow: column;\r\n    grid-template-rows: minmax(150px, 1fr);\r\n    align-items: center;\r\n    height: 98%;\r\n    width: 100%;\r\n    overflow-x: scroll;\r\n    scroll-snap-type: x proximity;\r\n    padding-bottom: calc(0.75 * 20px);\r\n    margin-bottom: calc(-0.25 * 20px);\r\n    padding: 0rem 2rem;\r\n  }\r\n  .title {\r\n    color: #c2c5c9;\r\n    position: absolute;\r\n    font-size: 3rem;\r\n    /* padding: 2rem 2rem; */\r\n    top: 2rem;\r\n    left: 2rem;\r\n    z-index: -1;\r\n  }\r\n  .item {\r\n    border-radius: 7px;\r\n    cursor: pointer;\r\n    transition: all 0.2s;\r\n    background-color: white;\r\n    height: 25rem;\r\n    width: 25rem;\r\n    display: grid;\r\n    grid-template-rows: 1.5rem 1fr min-content;\r\n    /* overflow: hidden; */\r\n    grid-template-areas:\r\n      \"title\"\r\n      \"content\"\r\n      \"footer\";\r\n    box-shadow: 0px 4px 12px rgba(0, 0, 0, 0.46);\r\n    position: relative;\r\n  }\r\n  .item__title {\r\n    border-top-right-radius: 7px;\r\n    border-top-left-radius: 7px;\r\n\r\n    grid-area: title;\r\n    color: #4b4b4c;\r\n    display: flex;\r\n    font-weight: 600;\r\n    justify-content: flex-start;\r\n    align-items: center;\r\n    background-color: #f2f2f3;\r\n    font-size: 0.5rem;\r\n    padding: 0 1rem;\r\n  }\r\n  .item__content {\r\n    position: relative;\r\n    margin-top: 1rem;\r\n    padding: 0rem 1rem;\r\n    grid-area: content;\r\n  }\r\n  .item__footer {\r\n    color: #bfbebf;\r\n    grid-area: footer;\r\n    font-size: 0.5rem;\r\n    padding: 0.5rem 1rem;\r\n  }\r\n</style>\r\n\r\n<main use:scrollY>\r\n  <NotificationDisplay />\r\n\r\n  <div class=\"item\" in:fly={{ x: 200, duration: 700, delay: 600 }}>\r\n    <div\r\n      class=\"item__title\"\r\n      on:click={() => (showOptions[uuid] = !showOptions[uuid])}>\r\n      Lançamento Natural\r\n    </div>\r\n    <div class=\"item__content\">\r\n\r\n      <FormManager\r\n        type={'Natural'}\r\n        onSubmit={data => {\r\n          return createNatural(data)\r\n            .then(() => {\r\n              console.log('ok');\r\n            })\r\n            .catch(err => console.log('error', err));\r\n        }}\r\n        {uuid}\r\n        cancelFn={() => backHome()}\r\n        addForm={() => {}} />\r\n    </div>\r\n    <div\r\n      class=\"item__footer\"\r\n      on:click={() => (showActions[uuid] = !showActions[uuid])}>\r\n      ⌘ Mais ações\r\n    </div>\r\n    {#if showActions[uuid] === true}\r\n      <NaturalActions\r\n        parentUUID={uuid}\r\n        rootUUID={uuid}\r\n        {actions}\r\n        hideActions={() => hideActions(uuid)} />\r\n    {/if}\r\n    {#if showOptions[uuid] === true}\r\n      <NaturalOptions\r\n        {uuid}\r\n        onDelete={uuid => deleteNatural(uuid)\r\n            .then(() => {\r\n              notifier.info(`Deletado`);\r\n              navigateTo('/');\r\n            })\r\n            .catch(err => console.log('erro ao apagar'))} />\r\n    {/if}\r\n  </div>\r\n  {#each $IntentStore.forms as form (form.frontendUUID)}\r\n    <div\r\n      class=\"item\"\r\n      in:fly={{ x: 200, duration: 700, delay: 600 }}\r\n      out:fly={{ x: 200, duration: 700 }}>\r\n      <div\r\n        class=\"item__title\"\r\n        on:click={() => (showOptions[form.frontendUUID] = !showOptions[form.frontendUUID])}>\r\n        {form.title}\r\n      </div>\r\n      <div class=\"item__content\">\r\n\r\n        <FormManager\r\n          type={form.type}\r\n          onUpdate={({ fields, values, type, parentUUID }) => {\r\n            return form\r\n              .onUpdate({\r\n                fields,\r\n                values,\r\n                type,\r\n                parentUUID,\r\n                frontendUUID: form.frontendUUID\r\n              })\r\n              .then(res => {\r\n                console.log('ok', res);\r\n                notifier.success(`${form.title} Atualizado`);\r\n              });\r\n          }}\r\n          onSubmit={({ fields, values, type, parentUUID }) => {\r\n            return form\r\n              .onSubmit({\r\n                fields,\r\n                values,\r\n                type,\r\n                parentUUID,\r\n                frontendUUID: form.frontendUUID\r\n              })\r\n              .then(res => {\r\n                console.log('ok', res);\r\n                notifier.success(`${form.title} executado`);\r\n              })\r\n              .catch(err => notifier.danger(`Erro:${form.title}`));\r\n          }}\r\n          parentUUID={form.parentUUID ? form.parentUUID : uuid}\r\n          uuid={form.frontendUUID}\r\n          cancelFn={() => IntentStore.removeForm(form.frontendUUID)}\r\n          addForm={() => {}} />\r\n      </div>\r\n      <div\r\n        class=\"item__footer\"\r\n        on:click={() => (showActions[form.frontendUUID] = !showActions[form.frontendUUID])}>\r\n        ⌘ Mais ações\r\n      </div>\r\n      {#if showActions[form.frontendUUID] === true}\r\n        <NaturalActions\r\n          parentUUID={form.frontendUUID}\r\n          {actions}\r\n          rootUUID={uuid}\r\n          hideActions={() => hideActions(form.frontendUUID)} />\r\n      {/if}\r\n      {#if showOptions[form.frontendUUID] === true}\r\n        <NaturalOptions\r\n          uuid={form.frontendUUID}\r\n          onDelete={uuid => form\r\n              .onDelete(uuid)\r\n              .then(() => {\r\n                IntentStore.removeForm(form.frontendUUID);\r\n                notifier.info(`Deletado`);\r\n              })\r\n              .catch(err => console.log('erro ao apagar'))} />\r\n      {/if}\r\n    </div>\r\n  {/each}\r\n</main>\r\n",
    "<script>\r\n  import { fade, fly } from \"svelte/transition\";\r\n  import { IntentStore } from \"../store/intent-store.js\";\r\n  import { intentTends_TO_DELETE } from \"../queries/intentions/natural-intents-delete.js\";\r\n  export let uuid;\r\n  export let onDelete;\r\n  const options = [{ text: \"Deletar\" }];\r\n</script>\r\n\r\n<style>\r\n  .main {\r\n    z-index: 9999999;\r\n    font-size: 0.7rem;\r\n    font-weight: 600;\r\n    height: 10rem;\r\n    width: 10rem;\r\n    background-color: #eeedef;\r\n    position: absolute;\r\n    top: 1rem;\r\n    left: 0rem;\r\n    border-radius: 10px;\r\n    border-color: white;\r\n    color: #575557;\r\n    border: 2px solid white;\r\n    box-shadow: 0px 4px 12px rgba(0, 0, 0, 0.26);\r\n  }\r\n  hr {\r\n    background-color: rgba(196, 196, 196, 0.5);\r\n    height: 1px;\r\n    border: 0;\r\n    width: 100%;\r\n  }\r\n  .grid {\r\n    display: grid;\r\n    padding-top: 0.5rem;\r\n    justify-items: center;\r\n  }\r\n  .menu__item {\r\n    display: flex;\r\n    flex-direction: column;\r\n    width: 100%;\r\n    /* justify-content: center; */\r\n    align-items: center;\r\n  }\r\n  .menu__item:hover {\r\n  }\r\n</style>\r\n\r\n<div\r\n  class=\"main\"\r\n  in:fly={{ y: -20, opacity: 0.2, duration: 300 }}\r\n  out:fly={{ y: 20, opacity: 0.2, duration: 300 }}>\r\n  <div class=\"grid\">\r\n    {#each options as option (option.text)}\r\n      <div class=\"menu__item\" on:click={() => onDelete(uuid)}>\r\n        <div>{option.text}</div>\r\n        <hr />\r\n      </div>\r\n    {/each}\r\n  </div>\r\n</div>\r\n",
    "<script>\r\n  import { fly } from \"svelte/transition\";\r\n  import { journalList } from \"../queries/list-journals-2.js\";\r\n  import { nodeRetrieve } from \"../queries/node-retrieve\";\r\n  import { navigateTo } from \"svelte-router-spa\";\r\n  import { DrillDownStore } from \"../store/drilldown-store.js\";\r\n  import { onMount } from \"svelte\";\r\n  let data = [];\r\n\r\n  const formatter = new Intl.NumberFormat(\"pt-BR\", {\r\n    style: \"currency\",\r\n    currency: \"BRL\"\r\n  });\r\n  const getData = async () => {\r\n    console.log($DrillDownStore);\r\n    const _data = $DrillDownStore.data ? $DrillDownStore.data : [];\r\n    const dataWithLinks = _data.map(element => {\r\n      const natural = element[\"journal.natural\"].contents;\r\n      const title = natural.find(field => field.id === \"title\")\r\n        ? natural.find(field => field.id === \"title\").value\r\n        : \"\";\r\n      const text = natural.find(field => field.id === \"text\")\r\n        ? natural.find(field => field.id === \"text\").value\r\n        : \"\";\r\n      const file = natural.find(field => field.id === \"file\")\r\n        ? natural.find(field => field.id === \"file\").value\r\n        : \"\";\r\n      return {\r\n        ...element,\r\n        title,\r\n        text,\r\n        file\r\n      };\r\n    });\r\n    data = [...dataWithLinks];\r\n    console.log(\"[data]\", data);\r\n  };\r\n  onMount(() => {\r\n    getData();\r\n  });\r\n  const editNatural = naturalUUID => {\r\n    console.log(\"editNatural\", naturalUUID);\r\n    navigateTo(`natural/${naturalUUID}/edit`);\r\n  };\r\n  const backToBalanco = () => {\r\n    navigateTo(`/`);\r\n  };\r\n</script>\r\n\r\n<style>\r\n  main {\r\n    border-radius: 7px;\r\n    transition: all 0.2s;\r\n    background-color: white;\r\n    box-shadow: 0px 4px 12px rgba(0, 0, 0, 0.46);\r\n    height: 30rem;\r\n    width: 75rem;\r\n    margin: 1rem 1rem;\r\n    padding: 0.5rem 0.5rem;\r\n    transform: translate(-50%, -50%);\r\n    position: absolute;\r\n    top: 50%;\r\n    left: 50%;\r\n    display: grid;\r\n  }\r\n  .natural-table {\r\n    display: grid;\r\n    grid-auto-flow: row;\r\n    overflow-x: auto;\r\n\r\n    transition: all 0.2s;\r\n\r\n    margin: 1rem 1rem;\r\n    padding: 0.5rem 0.5rem;\r\n    grid-row-gap: 2rem;\r\n  }\r\n  .title {\r\n    display: grid;\r\n    grid-auto-flow: column;\r\n    grid-template-columns: repeat(7, 8.5rem);\r\n  }\r\n  .title > div {\r\n    text-transform: uppercase;\r\n  }\r\n\r\n  .journal__accounting {\r\n    font-size: 0.75rem;\r\n  }\r\n  .journal__tags {\r\n    display: grid;\r\n    grid-auto-flow: row;\r\n    font-size: 0.55rem;\r\n  }\r\n  .journal__persona {\r\n    display: grid;\r\n    grid-auto-flow: row;\r\n    font-size: 0.55rem;\r\n  }\r\n  .natural-table__content {\r\n    cursor: pointer;\r\n    display: grid;\r\n    grid-auto-flow: column;\r\n    grid-template-columns: repeat(7, 8.5rem);\r\n    transition: all 0.3s;\r\n  }\r\n  .natural-table__content:hover {\r\n    color: white;\r\n    background-color: darkslategray;\r\n  }\r\n  button {\r\n    transform: scale(0.75);\r\n  }\r\n  .buttons {\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    transform: translateY(-36%);\r\n  }\r\n  .tagAmount {\r\n    font-size: 0.55rem;\r\n  }\r\n</style>\r\n\r\n<main>\r\n  <div class=\"buttons\">\r\n    <button on:click={backToBalanco}>VOLTAR</button>\r\n  </div>\r\n  <div class=\"natural-table\">\r\n    <div class=\"title\">\r\n      <div>Title</div>\r\n      <div>Description</div>\r\n      <div>Docs</div>\r\n      <div>Value</div>\r\n      <div>Accounting</div>\r\n      <div>Tags</div>\r\n      <div>Persona</div>\r\n    </div>\r\n    {#each data as element}\r\n      <div\r\n        class=\"natural-table__content\"\r\n        on:click={() => editNatural(element['journal.natural'].uuid)}>\r\n        <div class=\"journal__title\">{element.title}</div>\r\n        <div class=\"journal__text\">{element.text}</div>\r\n        <div class=\"journal__file\">{element.file}</div>\r\n        <div class=\"journal__value\">\r\n          {formatter.format(element.amount)}\r\n          <span class=\"tagAmount\">\r\n            {element.splitted ? ` de ${formatter.format(element.amountTotal)}` : ''}\r\n          </span>\r\n        </div>\r\n        <div class=\"journal__accounting\">\r\n          {element['journal.balanço'] + ' | ' + element['journal.grupo'] + ' | ' + element['journal.rubrica']}\r\n        </div>\r\n        <div class=\"journal__tags\">\r\n          {#each element['journal.tags'].filter(tag => !!tag.value && tag.title !== 'Persona') as tag}\r\n            <div>{tag.title}: {tag.value}</div>\r\n          {/each}\r\n        </div>\r\n        <div class=\"journal__persona\">\r\n          {#each element['journal.tags'].filter(tag => !!tag.value && tag.title == 'Persona') as tag}\r\n            <div>{tag.title}: {tag.value}</div>\r\n          {/each}\r\n        </div>\r\n      </div>\r\n    {/each}\r\n  </div>\r\n</main>\r\n",
    "<script>\r\n  import { fly } from \"svelte/transition\";\r\n  import { listNaturalsWithAccountsValues } from \"../queries/list-naturals-with-accounts-values.js\";\r\n  import { nodeRetrieve } from \"../queries/node-retrieve\";\r\n  import { navigateTo } from \"svelte-router-spa\";\r\n  import { DrillDownStore } from \"../store/drilldown-store.js\";\r\n  import { onMount } from \"svelte\";\r\n  let data = [];\r\n\r\n  const formatter = new Intl.NumberFormat(\"pt-BR\", {\r\n    style: \"currency\",\r\n    currency: \"BRL\"\r\n  });\r\n  const getData = async () => {\r\n    const _data = await listNaturalsWithAccountsValues();\r\n    console.log(_data);\r\n    const dataWithLinks = _data.map(element => {\r\n      const natural = element.natural;\r\n\r\n      return {\r\n        ...element,\r\n        title: natural.title\r\n      };\r\n    });\r\n    data = [...dataWithLinks];\r\n    console.log(\"[data]\", data);\r\n  };\r\n  onMount(() => {\r\n    getData();\r\n  });\r\n  const editNatural = naturalUUID => {\r\n    console.log(\"editNatural\", naturalUUID);\r\n    navigateTo(`natural/${naturalUUID}/edit`);\r\n  };\r\n  const backToBalanco = () => {\r\n    navigateTo(`/`);\r\n  };\r\n</script>\r\n\r\n<style>\r\n  main {\r\n    border-radius: 7px;\r\n    transition: all 0.2s;\r\n    background-color: white;\r\n    box-shadow: 0px 4px 12px rgba(0, 0, 0, 0.46);\r\n    height: 30rem;\r\n    width: 75rem;\r\n    margin: 1rem 1rem;\r\n    padding: 0.5rem 0.5rem;\r\n    transform: translate(-50%, -50%);\r\n    position: absolute;\r\n    top: 50%;\r\n    left: 50%;\r\n    display: grid;\r\n  }\r\n  .natural-table {\r\n    display: grid;\r\n    grid-auto-flow: row;\r\n    overflow-x: auto;\r\n\r\n    transition: all 0.2s;\r\n\r\n    margin: 1rem 1rem;\r\n    padding: 0.5rem 0.5rem;\r\n    grid-row-gap: 2rem;\r\n  }\r\n  .title {\r\n    display: grid;\r\n    position: sticky;\r\n    grid-auto-flow: column;\r\n    grid-template-columns: repeat(6, 11.5rem);\r\n  }\r\n  .title > div {\r\n    text-transform: uppercase;\r\n  }\r\n\r\n  .journal__accounting {\r\n    display: grid;\r\n    grid-auto-flow: row;\r\n    font-size: 0.55rem;\r\n  }\r\n  .journal__tags {\r\n    display: grid;\r\n    grid-auto-flow: row;\r\n    font-size: 0.55rem;\r\n  }\r\n  .journal__value {\r\n    display: grid;\r\n    grid-auto-flow: row;\r\n    font-size: 0.55rem;\r\n  }\r\n  .journal__persona {\r\n    display: grid;\r\n    grid-auto-flow: row;\r\n    font-size: 0.55rem;\r\n  }\r\n  .natural-table__content {\r\n    cursor: pointer;\r\n    display: grid;\r\n    grid-auto-flow: column;\r\n    grid-template-columns: repeat(6, 11.5rem);\r\n    transition: all 0.3s;\r\n  }\r\n  .natural-table__content:hover {\r\n    color: white;\r\n    background-color: darkslategray;\r\n  }\r\n  button {\r\n    transform: scale(0.75);\r\n  }\r\n  .buttons {\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    transform: translateY(-36%);\r\n  }\r\n</style>\r\n\r\n<main>\r\n  <div class=\"buttons\">\r\n    <button on:click={backToBalanco}>VOLTAR</button>\r\n  </div>\r\n  <div class=\"natural-table\">\r\n    <div class=\"title\">\r\n      <div>Title</div>\r\n      <div>Description</div>\r\n      <div>Value</div>\r\n      <div>Accounting</div>\r\n      <div>Tags</div>\r\n      <div>Persona</div>\r\n    </div>\r\n    {#each data as element}\r\n      <div\r\n        class=\"natural-table__content\"\r\n        on:click={() => editNatural(element['natural'].uuid)}>\r\n        <div class=\"journal__title\">{element.title}</div>\r\n        <div class=\"journal__text\">{''}</div>\r\n\r\n        <div class=\"journal__value\">\r\n          {#each element['values'].filter(value => !!value) as value}\r\n            <div>\r\n              | Valor:\r\n              <strong>{formatter.format(value.amount)}</strong>\r\n              - Data de Vencimento :\r\n              <strong>{value['Data de vencimento']}</strong>\r\n              - Data de Competência :\r\n              <strong>{value['Data de competência']}</strong>\r\n              - Unidade :\r\n              <strong>{value['unit']}</strong>\r\n              |\r\n            </div>\r\n          {/each}\r\n        </div>\r\n        <div class=\"journal__accounting\">\r\n          {#each element['journals'].filter(journal => !!journal.journal) as journal}\r\n            <div>\r\n              | Valor:\r\n              <strong>{formatter.format(journal.journal.portion)}</strong>\r\n              Conta\r\n              <strong>:{journal.account} -</strong>\r\n              Nat.:\r\n              <strong>{journal.journal.nature} |</strong>\r\n            </div>\r\n          {/each}\r\n\r\n        </div>\r\n        <div class=\"journal__tags\">\r\n          {#each element['tags'].filter(tag => !!tag) as tag}\r\n            <div>{tag.tagGroup}: {tag.tagName}</div>\r\n          {/each}\r\n        </div>\r\n        <div class=\"journal__persona\">\r\n          {#each element['personas'].filter(tag => !!tag) as tag}\r\n            <div>\r\n              Persona:\r\n              <strong>{tag.name}</strong>\r\n            </div>\r\n          {/each}\r\n        </div>\r\n      </div>\r\n    {/each}\r\n  </div>\r\n</main>\r\n",
    "<script>\r\n  import { onMount } from \"svelte\";\r\n  import FormManager from \"./FormManager.svelte\";\r\n  import { v4 as uuidv4 } from \"uuid\";\r\n  import { NotificationDisplay, notifier } from \"@beyonk/svelte-notifications\";\r\n  import { createPersona } from \"./queries/create-persona.js\";\r\n  export let hidePersona;\r\n  let uuid = \"\";\r\n  onMount(() => {\r\n    uuid = uuidv4();\r\n  });\r\n</script>\r\n\r\n<style>\r\n  main {\r\n    z-index: 9999999;\r\n    font-size: 0.7rem;\r\n    font-weight: 600;\r\n    padding: 1rem 1rem;\r\n    background-color: #eeedef;\r\n    position: absolute;\r\n    bottom: 50%;\r\n    right: 50%;\r\n    border-radius: 10px;\r\n    border-color: white;\r\n    color: #575557;\r\n    border: 2px solid white;\r\n    box-shadow: 0px 4px 12px rgba(0, 0, 0, 0.26);\r\n    transform: translate(50%, 50%);\r\n  }\r\n</style>\r\n\r\n<NotificationDisplay />\r\n<main>\r\n  <h1>Cadastro de Persona</h1>\r\n\r\n  <FormManager\r\n    type={'NovaPersona'}\r\n    onSubmit={data => {\r\n      const values = { ...data.values };\r\n      const fields = { ...data.fields };\r\n      const uuid = uuidv4();\r\n      createPersona({ ...values, uuid, fields })\r\n        .then(() => {\r\n          notifier.success('Persona Criada');\r\n          hidePersona();\r\n        })\r\n        .catch(() => {\r\n          notifier.error('Erro!');\r\n        });\r\n    }}\r\n    {uuid}\r\n    cancelFn={hidePersona}\r\n    addForm={() => {}} />\r\n</main>\r\n",
    "<script>\r\n  import { onMount } from \"svelte\";\r\n  import FormManager from \"./FormManager.svelte\";\r\n  import { v4 as uuidv4 } from \"uuid\";\r\n  import { NotificationDisplay, notifier } from \"@beyonk/svelte-notifications\";\r\n  import { createTag } from \"./queries/create-tag.js\";\r\n  export let hideTag;\r\n  let uuid = \"\";\r\n  onMount(() => {\r\n    uuid = uuidv4();\r\n  });\r\n</script>\r\n\r\n<style>\r\n  main {\r\n    z-index: 9999999;\r\n    font-size: 0.7rem;\r\n    font-weight: 600;\r\n    padding: 1rem 1rem;\r\n    background-color: #eeedef;\r\n    position: absolute;\r\n    bottom: 50%;\r\n    right: 50%;\r\n    border-radius: 10px;\r\n    border-color: white;\r\n    color: #575557;\r\n    border: 2px solid white;\r\n    box-shadow: 0px 4px 12px rgba(0, 0, 0, 0.26);\r\n    transform: translate(50%, 50%);\r\n  }\r\n</style>\r\n\r\n<NotificationDisplay />\r\n<main>\r\n\r\n  <h1>Cadastro de Tags</h1>\r\n  <FormManager\r\n    type={'NovaTag'}\r\n    onSubmit={data => {\r\n      const values = { ...data.values };\r\n      return createTag(values)\r\n        .then(() => {\r\n          notifier.success('Tag Criada');\r\n          setTimeout(() => hideTag(), 1500);\r\n        })\r\n        .catch(err => {\r\n          notifier.error('Erro!');\r\n        });\r\n      console.log(values);\r\n    }}\r\n    {uuid}\r\n    cancelFn={hideTag}\r\n    addForm={() => {}} />\r\n</main>\r\n",
    "<script>\r\n  import { onMount } from \"svelte\";\r\n  import { tagsList } from \"./queries/tags-list.js\";\r\n\r\n  export let generateReport;\r\n  function uuidv4() {\r\n    return \"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\".replace(/[xy]/g, function(c) {\r\n      var r = (Math.random() * 16) | 0,\r\n        v = c == \"x\" ? r : (r & 0x3) | 0x8;\r\n      return v.toString(16);\r\n    });\r\n  }\r\n  let tags = [\r\n    { id: 1, name: \"balanço\", key: \"journal.balanço\", frontendUUID: uuidv4() },\r\n    { id: 2, name: \"grupo\", key: \"journal.grupo\", frontendUUID: uuidv4() },\r\n    { id: 9, name: \"rubrica\", key: \"journal.rubrica\", frontendUUID: uuidv4() }\r\n  ];\r\n  let listOftags = [\r\n    { id: 1, name: \"balanço\", key: \"journal.balanço\" },\r\n    { id: 2, name: \"grupo\", key: \"journal.grupo\" },\r\n    { id: 9, name: \"rubrica\", key: \"journal.rubrica\" },\r\n    { id: 92, name: \"Persona\", key: \"Persona\", tag: true }\r\n  ];\r\n\r\n  onMount(() => {\r\n    tagsList()\r\n      .then(data => {\r\n        const _tags = [...new Set(data.map(tag => tag.group))].map(t => ({\r\n          id: uuidv4(),\r\n          name: t,\r\n          key: t,\r\n          tag: true\r\n        }));\r\n        listOftags = [...listOftags, ..._tags];\r\n        console.log(\"tagsChooser\", _tags);\r\n      })\r\n      .catch(err => console.log(err));\r\n  });\r\n  function onChangerValue(event, frontendUUID) {\r\n    let id = event.target.parentNode.id;\r\n    console.log(event.target.name, event.target.value);\r\n    tags = tags.map(entry => {\r\n      if (entry.frontendUUID === frontendUUID) {\r\n        let obj = {};\r\n        obj = listOftags.find(el => el.id == event.target.value);\r\n        return { ...entry, ...obj };\r\n      }\r\n      return { ...entry };\r\n    });\r\n  }\r\n  const addTag = () => {\r\n    tags = [...tags, { tagUUID: null, frontendUUID: uuidv4() }];\r\n  };\r\n  function removeTag(line) {\r\n    tags = tags.filter(entry => entry.frontendUUID != line);\r\n  }\r\n</script>\r\n\r\n<style>\r\n  main {\r\n    display: flex;\r\n  }\r\n  .tag {\r\n    display: grid;\r\n    grid-auto-flow: column;\r\n    align-items: baseline;\r\n  }\r\n  select {\r\n    width: 5rem;\r\n    font-size: 0.75rem;\r\n  }\r\n  .remove {\r\n    cursor: pointer;\r\n  }\r\n  button {\r\n    transform: scale(0.75);\r\n  }\r\n</style>\r\n\r\n<main>\r\n  {#each tags as tag (tag.frontendUUID)}\r\n    <div class=\"tag\">\r\n      <select\r\n        name=\"tagUUID\"\r\n        on:input={event => onChangerValue(event, tag.frontendUUID)}>\r\n        <option value={'null'} selected={!tag.id}>\r\n          ---- SELECIONE tag ----\r\n        </option>\r\n        {#each listOftags as option (option.id)}\r\n          <option value={option.id} selected={tag.id === option.id}>\r\n            {option.name}\r\n          </option>\r\n        {:else}\r\n          <option>Any</option>\r\n        {/each}\r\n      </select>\r\n      <div class=\"remove\" on:click={() => removeTag(tag.frontendUUID)}>❌</div>\r\n    </div>\r\n  {/each}\r\n</main>\r\n<button on:click={addTag}>Adicionar Tag</button>\r\n<button on:click={() => generateReport(tags)}>Fazer mágica</button>\r\n"
  ],
  "names": [],
  "mappings": "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"
}